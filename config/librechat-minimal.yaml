version: 1.0.0
cache: true

# Minimal Travel Agent Configuration for Voygen
endpoints:
  custom:
    # Haiku for cost-effective operations  
    - name: "Claude Haiku (Cost Effective)"
      apiKey: "${ANTHROPIC_API_KEY}"
      baseURL: "https://api.anthropic.com/v1"
      models:
        default: ["claude-3-5-haiku-20241022"]
      modelDisplayLabel: "üí∞ Haiku - Economical ($0.25/1M tokens)"
      titleConvo: true
      titleModel: "claude-3-5-haiku-20241022"
      
    # Sonnet for complex planning
    - name: "Claude Sonnet (Premium)"
      apiKey: "${ANTHROPIC_API_KEY}"
      baseURL: "https://api.anthropic.com/v1" 
      models:
        default: ["claude-3-5-sonnet-20241022"]
      modelDisplayLabel: "‚≠ê Sonnet - Premium Planning ($3.00/1M tokens)"
      titleConvo: true
      titleModel: "claude-3-5-sonnet-20241022"

# Minimal MCP Server Configuration
mcpServers:
  mcp-chrome:
    command: "node"
    args: ["./mcp-local-servers/mcp-chrome/app/native-server/dist/index.js"]
    timeout: 30000
    env: {}
    description: "Browser automation and web content extraction with hotel extraction capabilities"
    serverInstructions: |
      Browser automation and hotel extraction capabilities:
      - Use this server for real-time web interaction and content extraction:
        ‚Ä¢ chrome_extract_hotels: Extract hotel search results from travel websites (NaviTrip/CPMaxx, Booking.com, generic)
        ‚Ä¢ chrome_navigate: Navigate to travel websites and booking platforms
        ‚Ä¢ chrome_get_web_content: Get page content for analysis
        ‚Ä¢ chrome_screenshot: Take screenshots for visual confirmation
        ‚Ä¢ chrome_inject_script: Advanced page interaction and data extraction
        ‚Ä¢ chrome_fill_or_select: Fill forms and interact with booking interfaces
      - Hotel extraction supports multiple platforms with intelligent detection
      - Use chrome_extract_hotels when users need hotel data from booking sites
      - Extraction parameters: platform ('navitrip', 'auto'), extractionMode ('fast', 'complete'), maxResults
      - Ideal for dynamic content that requires JavaScript execution
      - Best for real-time price verification and availability checks

  d1-database:
    command: "npx"
    args: 
      - "-y"
      - "mcp-remote" 
      - "https://d1-database-improved.somotravel.workers.dev/sse"
    timeout: 30000
    env: {}
    description: "Access to client and trip database with comprehensive travel data"
    serverInstructions: |
      Tool selection guidance:
      - Use this server for data lookups and persistence:
        ‚Ä¢ get_anything: broad search for clients, trips, bookings
        ‚Ä¢ find_* and list_*: targeted DB queries
      - Do not use this server to drive conversational workflow progression.
      - If both servers expose a tool named `continue_trip`, prefer `continue_trip` from `prompt-instructions` for resuming trip context; this server's tools should not be chosen for `/continue` intents.
      - Prefer identifiers over names: when both are available, pass `trip_id` instead of long textual identifiers (e.g., `trip_identifier`, `trip_name`).
    
  prompt-instructions:
    command: "npx"
    args:
      - "-y" 
      - "mcp-remote"
      - "https://prompt-instructions-d1-mcp.somotravel.workers.dev/sse"
    timeout: 30000
    env: {}
    description: "Travel planning workflows, instructions, and structured processes"
    serverInstructions: |
      Tool selection guidance:
      - Use this server to manage workflow state and conversation flow.
        ‚Ä¢ travel_agent_start: initialize startup-core instructions
        ‚Ä¢ continue_trip: resume work on an existing trip (/continue ...)
      - Do not use this server for database-wide queries; instead, call `get_anything` on `d1-database`.
      - When the user types `/continue ...`, select `continue_trip` from `prompt-instructions`.
      - When referencing specific trips, include `trip_id` when available (IDs reduce ambiguity and extra DB lookups).

  github-mcp:
    command: "npx"
    args:
      - "-y"
      - "mcp-remote"
      - "https://github-mcp-cta.somotravel.workers.dev/sse"
    timeout: 30000
    env: {}
    description: "GitHub publishing with somotravel.us dashboard integration"
    serverInstructions: |
      Publishing integration capabilities:
      - Use this server for seamless travel document publishing:
        ‚Ä¢ publish_travel_document_with_dashboard_update: Complete publishing workflow (document + dashboard update)
        ‚Ä¢ update_dashboard_only: Update trips.json dashboard without publishing document
        ‚Ä¢ sync_trip_status: Map Voygen status to dashboard categories
        ‚Ä¢ github_create_file, github_update_file: Direct repository management
      - Single command publishes document and updates somotravel.us dashboard automatically
      - Maintains trips.json as source of truth with proper status categorization
      - Use for /publish command - handles everything in one operation

  mcp-anchor-browser:
    command: "npx"
    args:
      - "-y"
      - "mcp-remote"
      - "https://mcp-anchor-browser-production.somotravel.workers.dev/sse"
    timeout: 30000
    env: {}
    description: "Anchor Browser remote automation and travel data extraction"
    serverInstructions: |
      Remote browser automation capabilities:
      - Use this server for cloud-based browser automation:
        ‚Ä¢ anchor_create_session: Create new browser session with configurable settings
        ‚Ä¢ anchor_navigate: Navigate to travel websites and booking platforms  
        ‚Ä¢ anchor_get_page_content: Extract HTML content and page data
        ‚Ä¢ anchor_take_screenshot: Capture visual screenshots for confirmation
        ‚Ä¢ anchor_click_element: Interact with page elements (buttons, links)
        ‚Ä¢ anchor_fill_input: Fill forms and input fields
        ‚Ä¢ anchor_extract_data: Extract structured data from travel sites
        ‚Ä¢ anchor_execute_script: Run custom JavaScript for complex interactions
        ‚Ä¢ anchor_wait_for_element: Wait for dynamic content to load
        ‚Ä¢ anchor_close_session: Clean up browser sessions
        ‚Ä¢ anchor_list_sessions: Monitor active browser sessions
        ‚Ä¢ anchor_get_session_info: Get details about specific sessions
      - Ideal for travel sites that require JavaScript execution or have anti-bot measures
      - Cost-optimized with automatic session management and cleanup
      - Use when mcp-chrome local browser automation isn't sufficient
      - Best for production environments requiring reliable, scalable automation

# Interface customization for travel agents
interface:
  privacyPolicy:
    externalUrl: "https://voygen.app/privacy"
  termsOfService:
    externalUrl: "https://voygen.app/terms"