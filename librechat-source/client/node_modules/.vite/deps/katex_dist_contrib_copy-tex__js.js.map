{
  "version": 3,
  "sources": ["../../../../node_modules/katex/dist/contrib/copy-tex.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\nvar __webpack_exports__ = {};\n\n;// CONCATENATED MODULE: ./contrib/copy-tex/katex2tex.js\n// Set these to how you want inline and display math to be delimited.\nconst defaultCopyDelimiters = {\n  inline: ['$', '$'],\n  // alternative: ['\\(', '\\)']\n  display: ['$$', '$$'] // alternative: ['\\[', '\\]']\n\n}; // Replace .katex elements with their TeX source (<annotation> element).\n// Modifies fragment in-place.  Useful for writing your own 'copy' handler,\n// as in copy-tex.js.\n\nfunction katexReplaceWithTex(fragment, copyDelimiters) {\n  if (copyDelimiters === void 0) {\n    copyDelimiters = defaultCopyDelimiters;\n  }\n\n  // Remove .katex-html blocks that are preceded by .katex-mathml blocks\n  // (which will get replaced below).\n  const katexHtml = fragment.querySelectorAll('.katex-mathml + .katex-html');\n\n  for (let i = 0; i < katexHtml.length; i++) {\n    const element = katexHtml[i];\n\n    if (element.remove) {\n      element.remove();\n    } else if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  } // Replace .katex-mathml elements with their annotation (TeX source)\n  // descendant, with inline delimiters.\n\n\n  const katexMathml = fragment.querySelectorAll('.katex-mathml');\n\n  for (let i = 0; i < katexMathml.length; i++) {\n    const element = katexMathml[i];\n    const texSource = element.querySelector('annotation');\n\n    if (texSource) {\n      if (element.replaceWith) {\n        element.replaceWith(texSource);\n      } else if (element.parentNode) {\n        element.parentNode.replaceChild(texSource, element);\n      }\n\n      texSource.innerHTML = copyDelimiters.inline[0] + texSource.innerHTML + copyDelimiters.inline[1];\n    }\n  } // Switch display math to display delimiters.\n\n\n  const displays = fragment.querySelectorAll('.katex-display annotation');\n\n  for (let i = 0; i < displays.length; i++) {\n    const element = displays[i];\n    element.innerHTML = copyDelimiters.display[0] + element.innerHTML.substr(copyDelimiters.inline[0].length, element.innerHTML.length - copyDelimiters.inline[0].length - copyDelimiters.inline[1].length) + copyDelimiters.display[1];\n  }\n\n  return fragment;\n}\n/* harmony default export */ var katex2tex = (katexReplaceWithTex);\n;// CONCATENATED MODULE: ./contrib/copy-tex/copy-tex.js\n // Return <div class=\"katex\"> element containing node, or null if not found.\n\nfunction closestKatex(node) {\n  // If node is a Text Node, for example, go up to containing Element,\n  // where we can apply the `closest` method.\n  const element = node instanceof Element ? node : node.parentElement;\n  return element && element.closest('.katex');\n} // Global copy handler to modify behavior on/within .katex elements.\n\n\ndocument.addEventListener('copy', function (event) {\n  const selection = window.getSelection();\n\n  if (selection.isCollapsed || !event.clipboardData) {\n    return; // default action OK if selection is empty or unchangeable\n  }\n\n  const clipboardData = event.clipboardData;\n  const range = selection.getRangeAt(0); // When start point is within a formula, expand to entire formula.\n\n  const startKatex = closestKatex(range.startContainer);\n\n  if (startKatex) {\n    range.setStartBefore(startKatex);\n  } // Similarly, when end point is within a formula, expand to entire formula.\n\n\n  const endKatex = closestKatex(range.endContainer);\n\n  if (endKatex) {\n    range.setEndAfter(endKatex);\n  }\n\n  const fragment = range.cloneContents();\n\n  if (!fragment.querySelector('.katex-mathml')) {\n    return; // default action OK if no .katex-mathml elements\n  }\n\n  const htmlContents = Array.prototype.map.call(fragment.childNodes, el => el instanceof Text ? el.textContent : el.outerHTML).join(''); // Preserve usual HTML copy/paste behavior.\n\n  clipboardData.setData('text/html', htmlContents); // Rewrite plain-text version.\n\n  clipboardData.setData('text/plain', katex2tex(fragment).textContent); // Prevent normal copy handling.\n\n  event.preventDefault();\n});\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],
  "mappings": "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",
  "names": ["import_dist"]
}
