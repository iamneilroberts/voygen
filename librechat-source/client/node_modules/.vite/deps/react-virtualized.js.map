{
  "version": 3,
  "sources": ["../../../../node_modules/react-virtualized/dist/es/index.js", "../../../../node_modules/react-virtualized/dist/es/ArrowKeyStepper/index.js", "../../../../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js", "../../../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../../../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../../../../node_modules/@babel/runtime/helpers/esm/inherits.js", "../../../../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js", "../../../../node_modules/react-virtualized/dist/es/AutoSizer/index.js", "../../../../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js", "../../../../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js", "../../../../node_modules/react-virtualized/dist/es/CellMeasurer/index.js", "../../../../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js", "../../../../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js", "../../../../node_modules/react-virtualized/dist/es/Collection/index.js", "../../../../node_modules/react-virtualized/dist/es/Collection/Collection.js", "../../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js", "../../../../node_modules/react-virtualized/dist/es/Collection/CollectionView.js", "../../../../node_modules/react-virtualized/node_modules/clsx/dist/clsx.m.js", "../../../../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js", "../../../../node_modules/dom-helpers/esm/scrollbarSize.js", "../../../../node_modules/dom-helpers/esm/canUseDOM.js", "../../../../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js", "../../../../node_modules/react-virtualized/dist/es/Collection/SectionManager.js", "../../../../node_modules/react-virtualized/dist/es/Collection/Section.js", "../../../../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js", "../../../../node_modules/react-virtualized/dist/es/ColumnSizer/index.js", "../../../../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js", "../../../../node_modules/react-virtualized/dist/es/Grid/index.js", "../../../../node_modules/react-virtualized/dist/es/Grid/Grid.js", "../../../../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js", "../../../../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js", "../../../../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js", "../../../../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js", "../../../../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js", "../../../../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js", "../../../../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js", "../../../../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js", "../../../../node_modules/react-virtualized/dist/es/utils/animationFrame.js", "../../../../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js", "../../../../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js", "../../../../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js", "../../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js", "../../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js", "../../../../node_modules/react-virtualized/dist/es/List/index.js", "../../../../node_modules/react-virtualized/dist/es/List/List.js", "../../../../node_modules/react-virtualized/dist/es/Masonry/index.js", "../../../../node_modules/react-virtualized/dist/es/Masonry/createCellPositioner.js", "../../../../node_modules/react-virtualized/dist/es/Masonry/Masonry.js", "../../../../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js", "../../../../node_modules/react-virtualized/dist/es/vendor/intervalTree.js", "../../../../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js", "../../../../node_modules/react-virtualized/dist/es/MultiGrid/index.js", "../../../../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js", "../../../../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js", "../../../../node_modules/react-virtualized/dist/es/ScrollSync/index.js", "../../../../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js", "../../../../node_modules/react-virtualized/dist/es/Table/index.js", "../../../../node_modules/react-virtualized/dist/es/Table/createMultiSort.js", "../../../../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js", "../../../../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js", "../../../../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js", "../../../../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js", "../../../../node_modules/react-virtualized/dist/es/Table/SortIndicator.js", "../../../../node_modules/react-virtualized/dist/es/Table/SortDirection.js", "../../../../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js", "../../../../node_modules/react-virtualized/dist/es/Table/Column.js", "../../../../node_modules/react-virtualized/dist/es/Table/Table.js", "../../../../node_modules/react-virtualized/dist/es/WindowScroller/index.js", "../../../../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js", "../../../../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js", "../../../../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js"],
  "sourcesContent": ["export { ArrowKeyStepper } from './ArrowKeyStepper';\nexport { AutoSizer } from './AutoSizer';\nexport { CellMeasurer, CellMeasurerCache } from './CellMeasurer';\nexport { Collection } from './Collection';\nexport { ColumnSizer } from './ColumnSizer';\nexport { accessibilityOverscanIndicesGetter, defaultCellRangeRenderer, defaultOverscanIndicesGetter, Grid } from './Grid';\nexport { InfiniteLoader } from './InfiniteLoader';\nexport { List } from './List';\nexport { createCellPositioner as createMasonryCellPositioner, Masonry } from './Masonry';\nexport { MultiGrid } from './MultiGrid';\nexport { ScrollSync } from './ScrollSync';\nexport { createMultiSort as createTableMultiSort, defaultCellDataGetter as defaultTableCellDataGetter, defaultCellRenderer as defaultTableCellRenderer, defaultHeaderRenderer as defaultTableHeaderRenderer, defaultHeaderRowRenderer as defaultTableHeaderRowRenderer, defaultRowRenderer as defaultTableRowRenderer, Table, Column, SortDirection, SortIndicator } from './Table';\nexport { WindowScroller } from './WindowScroller';", "/*:: export type {ScrollIndices} from './types';*/\nexport { default } from './ArrowKeyStepper';\nexport { default as ArrowKeyStepper } from './ArrowKeyStepper';", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/*:: import type {RenderedSection} from '../Grid';*/\n/*:: import type {ScrollIndices} from './types';*/\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n/*:: type ChildrenParams = {\n  onSectionRendered: (params: RenderedSection) => void,\n  scrollToColumn: number,\n  scrollToRow: number,\n};*/\n/*:: type Props = {\n  children: (params: ChildrenParams) => React.Element<*>,\n  className?: string,\n  columnCount: number,\n  disabled: boolean,\n  isControlled: boolean,\n  mode: 'cells' | 'edges',\n  onScrollToChange?: (params: ScrollIndices) => void,\n  rowCount: number,\n  scrollToColumn: number,\n  scrollToRow: number,\n};*/\n/*:: type State = ScrollIndices & {\n  instanceProps: {\n    prevScrollToColumn: number,\n    prevScrollToRow: number,\n  },\n};*/\nvar ArrowKeyStepper = /*#__PURE__*/function (_React$PureComponent) {\n  function ArrowKeyStepper() {\n    var _this;\n    _classCallCheck(this, ArrowKeyStepper);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, ArrowKeyStepper, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n    _defineProperty(_this, \"_columnStartIndex\", 0);\n    _defineProperty(_this, \"_columnStopIndex\", 0);\n    _defineProperty(_this, \"_rowStartIndex\", 0);\n    _defineProperty(_this, \"_rowStopIndex\", 0);\n    _defineProperty(_this, \"_onKeyDown\", function (event /*: KeyboardEvent*/) {\n      var _this$props = _this.props,\n        columnCount = _this$props.columnCount,\n        disabled = _this$props.disabled,\n        mode = _this$props.mode,\n        rowCount = _this$props.rowCount;\n      if (disabled) {\n        return;\n      }\n      var _this$_getScrollState = _this._getScrollState(),\n        scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n        scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n      var _this$_getScrollState2 = _this._getScrollState(),\n        scrollToColumn = _this$_getScrollState2.scrollToColumn,\n        scrollToRow = _this$_getScrollState2.scrollToRow;\n\n      // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n    _defineProperty(_this, \"_onSectionRendered\", function (_ref /*:: */) {\n      var columnStartIndex = _ref /*:: */.columnStartIndex,\n        columnStopIndex = _ref /*:: */.columnStopIndex,\n        rowStartIndex = _ref /*:: */.rowStartIndex,\n        rowStopIndex = _ref /*:: */.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n    return _this;\n  }\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n  return _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2 /*:: */) {\n      var scrollToColumn = _ref2 /*:: */.scrollToColumn,\n        scrollToRow = _ref2 /*:: */.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        className = _this$props2.className,\n        children = _this$props2.children;\n      var _this$_getScrollState3 = this._getScrollState(),\n        scrollToColumn = _this$_getScrollState3.scrollToColumn,\n        scrollToRow = _this$_getScrollState3.scrollToRow;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3 /*:: */) {\n      var scrollToColumn = _ref3 /*:: */.scrollToColumn,\n        scrollToRow = _ref3 /*:: */.scrollToRow;\n      var _this$props3 = this.props,\n        isControlled = _this$props3.isControlled,\n        onScrollToChange = _this$props3.onScrollToChange;\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      if (nextProps.isControlled) {\n        return {};\n      }\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n      return {};\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };", "function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };", "import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n", "export { default } from './AutoSizer';\nexport { default as AutoSizer } from './AutoSizer';", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\n/*:: type Size = {\n  height: number,\n  width: number,\n};*/\n/*:: type Props = {\n  /** Function responsible for rendering children.*-/\n  children: Size => React.Element<*>,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  *-/\n  className?: string,\n\n  /** Default height to use for initial render; useful for SSR *-/\n  defaultHeight?: number,\n\n  /** Default width to use for initial render; useful for SSR *-/\n  defaultWidth?: number,\n\n  /** Disable dynamic :height property *-/\n  disableHeight: boolean,\n\n  /** Disable dynamic :width property *-/\n  disableWidth: boolean,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy *-/\n  nonce?: string,\n\n  /** Callback to be invoked on-resize *-/\n  onResize: Size => void,\n\n  /** Optional inline style *-/\n  style: ?Object,\n};*/\n/*:: type State = {\n  height: number,\n  width: number,\n};*/\n/*:: type ResizeHandler = (element: HTMLElement, onResize: () => void) => void;*/\n/*:: type DetectElementResize = {\n  addResizeListener: ResizeHandler,\n  removeResizeListener: ResizeHandler,\n};*/\nvar AutoSizer = /*#__PURE__*/function (_React$Component) {\n  function AutoSizer() {\n    var _this;\n    _classCallCheck(this, AutoSizer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, AutoSizer, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    _defineProperty(_this, \"_parentNode\", void 0);\n    _defineProperty(_this, \"_autoSizer\", void 0);\n    _defineProperty(_this, \"_window\", void 0);\n    // uses any instead of Window because Flow doesn't have window type\n    _defineProperty(_this, \"_detectElementResize\", void 0);\n    _defineProperty(_this, \"_onResize\", function () {\n      var _this$props = _this.props,\n        disableHeight = _this$props.disableHeight,\n        disableWidth = _this$props.disableWidth,\n        onResize = _this$props.onResize;\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    _defineProperty(_this, \"_setRef\", function (autoSizer /*: ?HTMLElement*/) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n  _inherits(AutoSizer, _React$Component);\n  return _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        disableHeight = _this$props2.disableHeight,\n        disableWidth = _this$props2.disableWidth,\n        style = _this$props2.style;\n      var _this$state = this.state,\n        height = _this$state.height,\n        width = _this$state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n      var outerStyle /*: Object*/ = {\n        overflow: 'visible'\n      };\n      var childParams /*: Object*/ = {};\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread(_objectSpread({}, outerStyle), style)\n      }, children(childParams));\n    }\n  }]);\n}(React.Component);\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\nexport { AutoSizer as default };", "/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\n\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n        head = doc.head || doc.getElementsByTagName('head')[0],\n        style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n      head.appendChild(style);\n    }\n  };\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = _window.getComputedStyle(element);\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var expandTrigger = doc.createElement('div');\n        expandTrigger.className = 'expand-trigger';\n        expandTrigger.appendChild(doc.createElement('div'));\n        var contractTrigger = doc.createElement('div');\n        contractTrigger.className = 'contract-trigger';\n        element.__resizeTriggers__.appendChild(expandTrigger);\n        element.__resizeTriggers__.appendChild(contractTrigger);\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}", "import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\n/*:: import type {CellMeasureCache} from './types';*/\nimport { cloneElement } from 'react';\n/*:: type Children = (params: {measure: () => void}) => React.Element<*>;*/\n/*:: type Cell = {\n  columnIndex: number,\n  rowIndex: number,\n};*/\n/*:: type Props = {\n  cache: CellMeasureCache,\n  children: Children | React.Element<*>,\n  columnIndex?: number,\n  index?: number,\n  parent: {\n    invalidateCellSizeAfterRender?: (cell: Cell) => void,\n    recomputeGridSize?: (cell: Cell) => void,\n  },\n  rowIndex?: number,\n};*/\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = /*#__PURE__*/function (_React$PureComponent) {\n  function CellMeasurer() {\n    var _this;\n    _classCallCheck(this, CellMeasurer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, CellMeasurer, [].concat(args));\n    _defineProperty(_this, \"_child\", /*#__PURE__*/React.createRef());\n    _defineProperty(_this, \"_measure\", function () {\n      var _this$props = _this.props,\n        cache = _this$props.cache,\n        _this$props$columnInd = _this$props.columnIndex,\n        columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n        parent = _this$props.parent,\n        _this$props$rowIndex = _this$props.rowIndex,\n        rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n        height = _this$_getCellMeasure.height,\n        width = _this$_getCellMeasure.width;\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    _defineProperty(_this, \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n      _this._child.current = element;\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n  _inherits(CellMeasurer, _React$PureComponent);\n  return _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var children = this.props.children;\n      var resolvedChildren = typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n      if (resolvedChildren === null) {\n        return resolvedChildren;\n      }\n      return /*#__PURE__*/cloneElement(resolvedChildren, {\n        ref: function ref(node) {\n          if (typeof resolvedChildren.ref === 'function') {\n            resolvedChildren.ref(node);\n          } else if (resolvedChildren.ref) {\n            resolvedChildren.ref.current = node;\n          }\n          _this2._child.current = node;\n        }\n      });\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child.current;\n\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height;\n\n        // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth);\n\n        // Reset after measuring to avoid breaking styles; see #660\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n        cache = _this$props2.cache,\n        _this$props2$columnIn = _this$props2.columnIndex,\n        columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n        parent = _this$props2.parent,\n        _this$props2$rowIndex = _this$props2.rowIndex,\n        rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n          height = _this$_getCellMeasure2.height,\n          width = _this$_getCellMeasure2.width;\n        cache.set(rowIndex, columnIndex, width, height);\n\n        // If size has changed, let Grid know to re-render.\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n}(React.PureComponent); // Used for DEV mode warning check\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\nexport { CellMeasurer as default };\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/*:: import type {CellMeasureCache} from './types';*/\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n/*:: type KeyMapper = (rowIndex: number, columnIndex: number) => any;*/\n/*:: type CellMeasurerCacheParams = {\n  defaultHeight?: number,\n  defaultWidth?: number,\n  fixedHeight?: boolean,\n  fixedWidth?: boolean,\n  minHeight?: number,\n  minWidth?: number,\n  keyMapper?: KeyMapper,\n};*/\n/*:: type Cache = {\n  [key: any]: number,\n};*/\n/*:: type IndexParam = {\n  index: number,\n};*/\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = /*#__PURE__*/function () {\n  function CellMeasurerCache() {\n    var _this = this;\n    var params /*: CellMeasurerCacheParams*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CellMeasurerCache);\n    _defineProperty(this, \"_cellHeightCache\", {});\n    _defineProperty(this, \"_cellWidthCache\", {});\n    _defineProperty(this, \"_columnWidthCache\", {});\n    _defineProperty(this, \"_rowHeightCache\", {});\n    _defineProperty(this, \"_defaultHeight\", void 0);\n    _defineProperty(this, \"_defaultWidth\", void 0);\n    _defineProperty(this, \"_minHeight\", void 0);\n    _defineProperty(this, \"_minWidth\", void 0);\n    _defineProperty(this, \"_keyMapper\", void 0);\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n    _defineProperty(this, \"_columnCount\", 0);\n    _defineProperty(this, \"_rowCount\", 0);\n    _defineProperty(this, \"columnWidth\", function (_ref /*:: */) {\n      var index = _ref /*:: */.index;\n      var key = _this._keyMapper(0, index);\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    _defineProperty(this, \"rowHeight\", function (_ref2 /*:: */) {\n      var index = _ref2 /*:: */.index;\n      var key = _this._keyMapper(index, 0);\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n      defaultWidth = params.defaultWidth,\n      fixedHeight = params.fixedHeight,\n      fixedWidth = params.fixedWidth,\n      keyMapper = params.keyMapper,\n      minHeight = params.minHeight,\n      minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n  return _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex /*: number*/) {\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() /*: number*/{\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() /*: number*/{\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() /*: boolean*/{\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() /*: boolean*/{\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex /*: number*/) /*: number*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex /*: number*/) /*: boolean*/{\n      var columnIndex /*: number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var key = this._keyMapper(rowIndex, columnIndex);\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex /*: number*/, columnIndex /*: number*/, width /*: number*/, height /*: number*/) /*: void*/{\n      var key = this._keyMapper(rowIndex, columnIndex);\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex /*: number*/, columnIndex /*: number*/) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }]);\n}();\nexport { CellMeasurerCache as default };\nfunction defaultKeyMapper(rowIndex /*: number*/, columnIndex /*: number*/) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}", "import Collection from './Collection';\nexport default Collection;\nexport { Collection };", "import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n/*:: import type {ScrollPosition, SizeInfo} from './types';*/\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection = /*#__PURE__*/function (_React$PureComponent) {\n  function Collection(props, context) {\n    var _this;\n    _classCallCheck(this, Collection);\n    _this = _callSuper(this, Collection, [props, context]);\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = [];\n\n    // Cell cache during scroll (for performance)\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n  _inherits(Collection, _React$PureComponent);\n  return _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n\n    /** See Collection#recomputeCellSizesAndPositions */\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n\n    /** React lifecycle methods */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, (_objectDestructuringEmpty(this.props), this.props));\n      return /*#__PURE__*/React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n\n    /** CellLayoutManager interface */\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n        cellCount = _this$props.cellCount,\n        cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n        sectionSize = _this$props.sectionSize;\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) /*: ScrollPosition*/{\n      var align = _ref.align,\n        cellIndex = _ref.cellIndex,\n        height = _ref.height,\n        scrollLeft = _ref.scrollLeft,\n        scrollTop = _ref.scrollTop,\n        width = _ref.width;\n      var cellCount = this.props.cellCount;\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() /*: SizeInfo*/{\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n      var height = _ref2.height,\n        isScrolling = _ref2.isScrolling,\n        width = _ref2.width,\n        x = _ref2.x,\n        y = _ref2.y;\n      var _this$props2 = this.props,\n        cellGroupRenderer = _this$props2.cellGroupRenderer,\n        cellRenderer = _this$props2.cellRenderer;\n\n      // Store for later calls to getLastRenderedIndices()\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n    cellRenderer = _ref4.cellRenderer,\n    cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n    indices = _ref4.indices,\n    isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    };\n\n    // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}", "function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\n\n// @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar IS_SCROLLING_TIMEOUT = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\nvar CollectionView = /*#__PURE__*/function (_React$PureComponent) {\n  function CollectionView() {\n    var _this;\n    _classCallCheck(this, CollectionView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, CollectionView, [].concat(args));\n\n    // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n    _defineProperty(_this, \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n    _defineProperty(_this, \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n    // Invokes callbacks only when their values have changed.\n    _defineProperty(_this, \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n    _defineProperty(_this, \"_onScrollMemoizer\", createCallbackMemoizer(false));\n    _defineProperty(_this, \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n        cellLayoutManager = _this$props.cellLayoutManager,\n        onSectionRendered = _this$props.onSectionRendered;\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n    _defineProperty(_this, \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    _defineProperty(_this, \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n        cellLayoutManager = _this$props2.cellLayoutManager,\n        height = _this$props2.height,\n        scrollToAlignment = _this$props2.scrollToAlignment,\n        scrollToCell = _this$props2.scrollToCell,\n        width = _this$props2.width;\n      var _this$state = _this.state,\n        scrollLeft = _this$state.scrollLeft,\n        scrollTop = _this$state.scrollTop;\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n    _defineProperty(_this, \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._enablePointerEventsAfterDelay();\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n      var _this$props3 = _this.props,\n        cellLayoutManager = _this$props3.cellLayoutManager,\n        height = _this$props3.height,\n        isScrollingChange = _this$props3.isScrollingChange,\n        width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n        totalHeight = _cellLayoutManager$ge.height,\n        totalWidth = _cellLayoutManager$ge.width;\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop));\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED;\n\n        // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n    _this._scrollbarSize = getScrollbarSize();\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n  _inherits(CollectionView, _React$PureComponent);\n  return _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n        cellLayoutManager = _this$props4.cellLayoutManager,\n        scrollLeft = _this$props4.scrollLeft,\n        scrollToCell = _this$props4.scrollToCell,\n        scrollTop = _this$props4.scrollTop;\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n\n      // Update onSectionRendered callback.\n      this._invokeOnSectionRenderedHelper();\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n        totalHeight = _cellLayoutManager$ge2.height,\n        totalWidth = _cellLayoutManager$ge2.width;\n\n      // Initialize onScroll callback.\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n        height = _this$props5.height,\n        scrollToAlignment = _this$props5.scrollToAlignment,\n        scrollToCell = _this$props5.scrollToCell,\n        width = _this$props5.width;\n      var _this$state2 = this.state,\n        scrollLeft = _this$state2.scrollLeft,\n        scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n        scrollTop = _this$state2.scrollTop;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Update scroll offsets if the current :scrollToCell values requires it\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        autoHeight = _this$props6.autoHeight,\n        cellCount = _this$props6.cellCount,\n        cellLayoutManager = _this$props6.cellLayoutManager,\n        className = _this$props6.className,\n        height = _this$props6.height,\n        horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n        id = _this$props6.id,\n        noContentRenderer = _this$props6.noContentRenderer,\n        style = _this$props6.style,\n        verticalOverscanSize = _this$props6.verticalOverscanSize,\n        width = _this$props6.width;\n      var _this$state3 = this.state,\n        isScrolling = _this$state3.isScrolling,\n        scrollLeft = _this$state3.scrollLeft,\n        scrollTop = _this$state3.scrollTop;\n\n      // Memoization reset\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n        totalHeight = _cellLayoutManager$ge3.height,\n        totalWidth = _cellLayoutManager$ge3.width;\n\n      // Safely expand the rendered area by the specified overscan amount\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      };\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0;\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread(_objectSpread({}, collectionStyle), style),\n        tabIndex: 0\n      }, cellCount > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n      var scrollLeft = _ref.scrollLeft,\n        scrollTop = _ref.scrollTop,\n        totalHeight = _ref.totalHeight,\n        totalWidth = _ref.totalWidth;\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n            scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n            height = _this3$props.height,\n            onScroll = _this3$props.onScroll,\n            width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n        scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n      indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}", "import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}", "export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);", "import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n    cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n    sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\n/*:: import type {Index, SizeAndPositionInfo} from './types';*/\nvar SECTION_SIZE = 100;\n/*:: type RegisterCellParams = {\n  cellMetadatum: SizeAndPositionInfo,\n  index: number,\n};*/\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager = /*#__PURE__*/function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n    _classCallCheck(this, SectionManager);\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n  return _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref /*:: */) /*: Array<number>*/{\n      var height = _ref /*:: */.height,\n        width = _ref /*:: */.width,\n        x = _ref /*:: */.x,\n        y = _ref /*:: */.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      });\n\n      // Object keys are strings; this function returns numbers\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n\n    /** Get size and position information for the cell specified. */\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2 /*:: */) /*: SizeAndPositionInfo*/{\n      var index = _ref2 /*:: */.index;\n      return this._cellMetadata[index];\n    }\n\n    /** Get all Sections overlapping the specified region. */\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3 /*:: */) /*: Array<Section>*/{\n      var height = _ref3 /*:: */.height,\n        width = _ref3 /*:: */.width,\n        x = _ref3 /*:: */.x,\n        y = _ref3 /*:: */.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n          sections.push(this._sections[key]);\n        }\n      }\n      return sections;\n    }\n\n    /** Total number of Sections based on the currently registered cells. */\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n\n    /** Intended for debugger/test purposes only */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4 /*:: */) {\n      var cellMetadatum = _ref4 /*:: */.cellMetadatum,\n        index = _ref4 /*:: */.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n}();\nexport { SectionManager as default };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/*:: import type {Index, SizeAndPositionInfo} from './types';*/\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref /*:: */) {\n    var height = _ref /*:: */.height,\n      width = _ref /*:: */.width,\n      x = _ref /*:: */.x,\n      y = _ref /*:: */.y;\n    _classCallCheck(this, Section);\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n\n  /** Add a cell to this section. */\n  return _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2 /*:: */) {\n      var index = _ref2 /*:: */.index;\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n        this._indices.push(index);\n      }\n    }\n\n    /** Get all cell indices that have been added to this section. */\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() /*: Array<number>*/{\n      return this._indices;\n    }\n\n    /** Intended for debugger/test purposes only */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n}();\nexport { Section as default };", "/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n    align = _ref$align === void 0 ? 'auto' : _ref$align,\n    cellOffset = _ref.cellOffset,\n    cellSize = _ref.cellSize,\n    containerSize = _ref.containerSize,\n    currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}", "import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\nvar ColumnSizer = /*#__PURE__*/function (_React$PureComponent) {\n  function ColumnSizer(props, context) {\n    var _this;\n    _classCallCheck(this, ColumnSizer);\n    _this = _callSuper(this, ColumnSizer, [props, context]);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n  _inherits(ColumnSizer, _React$PureComponent);\n  return _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n        columnMaxWidth = _this$props.columnMaxWidth,\n        columnMinWidth = _this$props.columnMinWidth,\n        columnCount = _this$props.columnCount,\n        width = _this$props.width;\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        columnMaxWidth = _this$props2.columnMaxWidth,\n        columnMinWidth = _this$props2.columnMinWidth,\n        columnCount = _this$props2.columnCount,\n        width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n      this._registeredChild = child;\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n}(React.PureComponent);\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};", "/*:: export type {\n  NoContentRenderer,\n  Alignment,\n  CellPosition,\n  CellSize,\n  OverscanIndicesGetter,\n  RenderedSection,\n  CellRendererParams,\n  Scroll,\n} from './types';*/\nexport { default } from './Grid';\nexport { default as Grid } from './Grid';\nexport { default as accessibilityOverscanIndicesGetter } from './accessibilityOverscanIndicesGetter';\nexport { default as defaultCellRangeRenderer } from './defaultCellRangeRenderer';\nexport { default as defaultOverscanIndicesGetter } from './defaultOverscanIndicesGetter';", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/*:: import type {\n  CellRenderer,\n  CellRangeRenderer,\n  CellPosition,\n  CellSize,\n  CellSizeGetter,\n  NoContentRenderer,\n  Scroll,\n  ScrollbarPresenceChange,\n  RenderedSection,\n  OverscanIndicesGetter,\n  Alignment,\n  CellCache,\n  StyleCache,\n} from './types';*/\n/*:: import type {AnimationTimeoutId} from '../utils/requestAnimationTimeout';*/\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\nvar renderNull /*: NoContentRenderer*/ = function renderNull() {\n  return null;\n};\n/*:: type ScrollPosition = {\n  scrollTop?: number,\n  scrollLeft?: number,\n};*/\n/*:: type Props = {\n  'aria-label': string,\n  'aria-readonly'?: boolean,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   *-/\n  autoContainerWidth: boolean,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   *-/\n  autoHeight: boolean,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   *-/\n  autoWidth: boolean,\n\n  /** Responsible for rendering a cell given an row and column index.  *-/\n  cellRenderer: CellRenderer,\n\n  /** Responsible for rendering a group of cells given their index ranges.  *-/\n  cellRangeRenderer: CellRangeRenderer,\n\n  /** Optional custom CSS class name to attach to root Grid element.  *-/\n  className?: string,\n\n  /** Number of columns in grid.  *-/\n  columnCount: number,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  *-/\n  columnWidth: CellSize,\n\n  /** Unfiltered props for the Grid container. *-/\n  containerProps?: Object,\n\n  /** ARIA role for the cell-container.  *-/\n  containerRole: string,\n\n  /** Optional inline style applied to inner cell-container *-/\n  containerStyle: Object,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   *-/\n  deferredMeasurementCache?: Object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   *-/\n  estimatedColumnSize: number,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   *-/\n  estimatedRowSize: number,\n\n  /** Exposed for testing purposes only.  *-/\n  getScrollbarSize: () => number,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  *-/\n  height: number,\n\n  /** Optional custom id to attach to root Grid element.  *-/\n  id?: string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   *-/\n  isScrolling?: boolean,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   *-/\n  isScrollingOptOut: boolean,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  *-/\n  noContentRenderer: NoContentRenderer,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   *-/\n  onScroll: (params: Scroll) => void,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   *-/\n  onScrollbarPresenceChange: (params: ScrollbarPresenceChange) => void,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  *-/\n  onSectionRendered: (params: RenderedSection) => void,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   *-/\n  overscanColumnCount: number,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   *-/\n  overscanIndicesGetter: OverscanIndicesGetter,\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   *-/\n  overscanRowCount: number,\n\n  /** ARIA role for the grid element.  *-/\n  role: string,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   *-/\n  rowHeight: CellSize,\n\n  /** Number of rows in grid.  *-/\n  rowCount: number,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. *-/\n  scrollingResetTimeInterval: number,\n\n  /** Horizontal offset. *-/\n  scrollLeft?: number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   *-/\n  scrollToAlignment: Alignment,\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) *-/\n  scrollToColumn: number,\n\n  /** Vertical offset. *-/\n  scrollTop?: number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) *-/\n  scrollToRow: number,\n\n  /** Optional inline style *-/\n  style: Object,\n\n  /** Tab index for focus *-/\n  tabIndex: ?number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  *-/\n  width: number,\n\n  /** Reference to DOM node *-/\n  elementRef?: React.Ref<React.ElementType>,\n};*/\n/*:: type InstanceProps = {\n  prevColumnWidth: CellSize,\n  prevRowHeight: CellSize,\n\n  prevColumnCount: number,\n  prevRowCount: number,\n  prevIsScrolling: boolean,\n  prevScrollToColumn: number,\n  prevScrollToRow: number,\n\n  columnSizeAndPositionManager: ScalingCellSizeAndPositionManager,\n  rowSizeAndPositionManager: ScalingCellSizeAndPositionManager,\n\n  scrollbarSize: number,\n  scrollbarSizeMeasured: boolean,\n};*/\n/*:: type State = {\n  instanceProps: InstanceProps,\n  isScrolling: boolean,\n  scrollDirectionHorizontal: -1 | 1,\n  scrollDirectionVertical: -1 | 1,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollPositionChangeReason: 'observed' | 'requested' | null,\n  needToResetStyleCache: boolean,\n};*/\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = /*#__PURE__*/function (_React$PureComponent) {\n  function Grid(props /*: Props*/) {\n    var _this;\n    _classCallCheck(this, Grid);\n    _this = _callSuper(this, Grid, [props]);\n    // Invokes onSectionRendered callback only when start/stop row or column indices change\n    _defineProperty(_this, \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n    _defineProperty(_this, \"_onScrollMemoizer\", createCallbackMemoizer(false));\n    _defineProperty(_this, \"_deferredInvalidateColumnIndex\", null);\n    _defineProperty(_this, \"_deferredInvalidateRowIndex\", null);\n    _defineProperty(_this, \"_recomputeScrollLeftFlag\", false);\n    _defineProperty(_this, \"_recomputeScrollTopFlag\", false);\n    _defineProperty(_this, \"_horizontalScrollBarSize\", 0);\n    _defineProperty(_this, \"_verticalScrollBarSize\", 0);\n    _defineProperty(_this, \"_scrollbarPresenceChanged\", false);\n    _defineProperty(_this, \"_scrollingContainer\", void 0);\n    _defineProperty(_this, \"_childrenToDisplay\", void 0);\n    _defineProperty(_this, \"_columnStartIndex\", void 0);\n    _defineProperty(_this, \"_columnStopIndex\", void 0);\n    _defineProperty(_this, \"_rowStartIndex\", void 0);\n    _defineProperty(_this, \"_rowStopIndex\", void 0);\n    _defineProperty(_this, \"_renderedColumnStartIndex\", 0);\n    _defineProperty(_this, \"_renderedColumnStopIndex\", 0);\n    _defineProperty(_this, \"_renderedRowStartIndex\", 0);\n    _defineProperty(_this, \"_renderedRowStopIndex\", 0);\n    _defineProperty(_this, \"_initialScrollTop\", void 0);\n    _defineProperty(_this, \"_initialScrollLeft\", void 0);\n    _defineProperty(_this, \"_disablePointerEventsTimeoutId\", void 0);\n    _defineProperty(_this, \"_styleCache\", {});\n    _defineProperty(_this, \"_cellCache\", {});\n    _defineProperty(_this, \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null;\n      // isScrolling is used to determine if we reset styleCache\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    _defineProperty(_this, \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    _defineProperty(_this, \"_setScrollingContainerRef\", function (ref /*: Element*/) {\n      _this._scrollingContainer = ref;\n      if (typeof _this.props.elementRef === 'function') {\n        _this.props.elementRef(ref);\n      } else if (_typeof(_this.props.elementRef) === 'object') {\n        _this.props.elementRef.current = ref;\n      }\n    });\n    _defineProperty(_this, \"_onScroll\", function (event /*: Event*/) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent((event.target /*: any*/));\n      }\n    });\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n    return _this;\n  }\n\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n  _inherits(Grid, _React$PureComponent);\n  return _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$alignment = _ref.alignment,\n        alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n        _ref$columnIndex = _ref.columnIndex,\n        columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n        _ref$rowIndex = _ref.rowIndex,\n        rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n      var offsetProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n\n    /**\n     * Gets estimated total rows' height.\n     */\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * Gets estimated total columns' width.\n     */\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2 /*:: */) {\n      var _ref2$scrollLeft = _ref2 /*:: */.scrollLeft,\n        scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n        _ref2$scrollTop = _ref2 /*:: */.scrollTop,\n        scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      this._debounceScrollEnded();\n      var _this$props = this.props,\n        autoHeight = _this$props.autoHeight,\n        autoWidth = _this$props.autoWidth,\n        height = _this$props.height,\n        width = _this$props.width;\n      var instanceProps = this.state.instanceProps;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam);\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState /*: $Shape<State>*/ = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3 /*:: */) {\n      var columnIndex = _ref3 /*:: */.columnIndex,\n        rowIndex = _ref3 /*:: */.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n        columnCount = _this$props2.columnCount,\n        rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref4$columnIndex = _ref4.columnIndex,\n        columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n        _ref4$rowIndex = _ref4.rowIndex,\n        rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n      var _this$props3 = this.props,\n        scrollToColumn = _this$props3.scrollToColumn,\n        scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex);\n\n      // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow);\n\n      // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n\n    /**\n     * Ensure column and row are visible.\n     */\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5 /*:: */) {\n      var columnIndex = _ref5 /*:: */.columnIndex,\n        rowIndex = _ref5 /*:: */.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props;\n\n      // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread(_objectSpread({}, props), {}, {\n          scrollToColumn: columnIndex\n        }));\n      }\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread(_objectSpread({}, props), {}, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n        getScrollbarSize = _this$props4.getScrollbarSize,\n        height = _this$props4.height,\n        scrollLeft = _this$props4.scrollLeft,\n        scrollToColumn = _this$props4.scrollToColumn,\n        scrollTop = _this$props4.scrollTop,\n        scrollToRow = _this$props4.scrollToRow,\n        width = _this$props4.width;\n      var instanceProps = this.state.instanceProps;\n\n      // Reset initial offsets to be ignored in browser\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0;\n\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n      this._handleInvalidatedGridSize();\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread(_objectSpread({}, prevState), {}, {\n            needToResetStyleCache: false\n          });\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      }\n\n      // refs don't work in `react-test-renderer`\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      }\n\n      // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      }\n\n      // Update onRowsRendered callback\n      this._invokeOnGridRenderedHelper();\n\n      // Initialize onScroll callback\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        autoHeight = _this$props5.autoHeight,\n        autoWidth = _this$props5.autoWidth,\n        columnCount = _this$props5.columnCount,\n        height = _this$props5.height,\n        rowCount = _this$props5.rowCount,\n        scrollToAlignment = _this$props5.scrollToAlignment,\n        scrollToColumn = _this$props5.scrollToColumn,\n        scrollToRow = _this$props5.scrollToRow,\n        width = _this$props5.width;\n      var _this$state = this.state,\n        scrollLeft = _this$state.scrollLeft,\n        scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n        scrollTop = _this$state.scrollTop,\n        instanceProps = _this$state.instanceProps;\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n      this._handleInvalidatedGridSize();\n\n      // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0;\n\n      // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnGridRenderedHelper();\n\n      // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        autoContainerWidth = _this$props6.autoContainerWidth,\n        autoHeight = _this$props6.autoHeight,\n        autoWidth = _this$props6.autoWidth,\n        className = _this$props6.className,\n        containerProps = _this$props6.containerProps,\n        containerRole = _this$props6.containerRole,\n        containerStyle = _this$props6.containerStyle,\n        height = _this$props6.height,\n        id = _this$props6.id,\n        noContentRenderer = _this$props6.noContentRenderer,\n        role = _this$props6.role,\n        style = _this$props6.style,\n        tabIndex = _this$props6.tabIndex,\n        width = _this$props6.width;\n      var _this$state2 = this.state,\n        instanceProps = _this$state2.instanceProps,\n        needToResetStyleCache = _this$state2.needToResetStyleCache;\n      var isScrolling = this._isScrolling();\n      var gridStyle /*: Object*/ = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      }\n\n      // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      }\n\n      // calculate children to render here\n      this._calculateChildrenToRender(this.props, this.state);\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      }\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread(_objectSpread({}, gridStyle), style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n        cellRangeRenderer = props.cellRangeRenderer,\n        columnCount = props.columnCount,\n        deferredMeasurementCache = props.deferredMeasurementCache,\n        height = props.height,\n        overscanColumnCount = props.overscanColumnCount,\n        overscanIndicesGetter = props.overscanIndicesGetter,\n        overscanRowCount = props.overscanRowCount,\n        rowCount = props.rowCount,\n        width = props.width,\n        isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n        scrollDirectionVertical = state.scrollDirectionVertical,\n        instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n      var isScrolling = this._isScrolling(props, state);\n      this._childrenToDisplay = [];\n\n      // Render only enough columns and rows to cover the visible area of the grid.\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex;\n\n        // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          }\n\n          // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        });\n\n        // update the indices\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value:\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6 /*:: */) {\n      var _this3 = this;\n      var scrollLeft = _ref6 /*:: */.scrollLeft,\n        scrollTop = _ref6 /*:: */.scrollTop,\n        totalColumnsWidth = _ref6 /*:: */.totalColumnsWidth,\n        totalRowsHeight = _ref6 /*:: */.totalRowsHeight;\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n            scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n            height = _this3$props.height,\n            onScroll = _this3$props.onScroll,\n            width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() /*: boolean*/{\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n    value:\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    function scrollToPosition(_ref8 /*:: */) {\n      var scrollLeft = _ref8 /*:: */.scrollLeft,\n        scrollTop = _ref8 /*:: */.scrollTop;\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut;\n\n      // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n      this._cellCache = {};\n      this._styleCache = {};\n\n      // Copy over the visible cell styles so avoid unnecessary re-render.\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state /*: State*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      var newState = {};\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0;\n\n        // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n      var instanceProps = prevState.instanceProps;\n\n      // Initially we should not clearStyleCache\n      newState.needToResetStyleCache = false;\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      }\n\n      // If scrolling is controlled outside this component, clear cache when scrolling stops\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow;\n\n      // getting scrollBarSize (moved from componentWillMount)\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n      newState.instanceProps = instanceProps;\n      return _objectSpread(_objectSpread(_objectSpread({}, newState), maybeStateA), maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props /*: Props*/) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props /*: Props*/) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n    value:\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    function _getScrollToPositionStateUpdate(_ref9 /*:: */) /*: $Shape<State>*/{\n      var prevState = _ref9 /*:: */.prevState,\n        scrollLeft = _ref9 /*:: */.scrollLeft,\n        scrollTop = _ref9 /*:: */.scrollTop;\n      var newState /*: Object*/ = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value /*: CellSize*/) /*: CellSizeGetter*/{\n      return typeof value === 'function' ? value : function () {\n        return (value /*: any*/);\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps /*: Props*/, prevState /*: State*/) {\n      var columnCount = nextProps.columnCount,\n        height = nextProps.height,\n        scrollToAlignment = nextProps.scrollToAlignment,\n        scrollToColumn = nextProps.scrollToColumn,\n        width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n        instanceProps = prevState.instanceProps;\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      var scrollLeft = prevState.scrollLeft;\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps /*: Props*/, prevState /*: State*/) {\n      var height = nextProps.height,\n        rowCount = nextProps.rowCount,\n        scrollToAlignment = nextProps.scrollToAlignment,\n        scrollToRow = nextProps.scrollToRow,\n        width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n        instanceProps = prevState.instanceProps;\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      var scrollTop = prevState.scrollTop;\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n      return {};\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'row',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\npolyfill(Grid);\nexport default Grid;", "/**\n * Helper method that determines when to recalculate row or column metadata.\n */\n/*:: type Params<T> = {\n  // Number of rows or columns in the current axis\n  cellCount: number,\n\n  // Width or height of cells for the current axis\n  cellSize: ?number,\n\n  // Method to invoke if cell metadata should be recalculated\n  computeMetadataCallback: (props: T) => void,\n\n  // Parameters to pass to :computeMetadataCallback\n  computeMetadataCallbackProps: T,\n\n  // Newly updated number of rows or columns in the current axis\n  nextCellsCount: number,\n\n  // Newly updated width or height of cells for the current axis\n  nextCellSize: ?number,\n\n  // Newly updated scroll-to-index\n  nextScrollToIndex: number,\n\n  // Scroll-to-index\n  scrollToIndex: number,\n\n  // Callback to invoke if the scroll position should be recalculated\n  updateScrollOffsetForScrollToIndex: () => void,\n};*/\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref /*:: */) {\n  var cellCount = _ref /*:: */.cellCount,\n    cellSize = _ref /*:: */.cellSize,\n    computeMetadataCallback = _ref /*:: */.computeMetadataCallback,\n    computeMetadataCallbackProps = _ref /*:: */.computeMetadataCallbackProps,\n    nextCellsCount = _ref /*:: */.nextCellsCount,\n    nextCellSize = _ref /*:: */.nextCellSize,\n    nextScrollToIndex = _ref /*:: */.nextScrollToIndex,\n    scrollToIndex = _ref /*:: */.scrollToIndex,\n    updateScrollOffsetForScrollToIndex = _ref /*:: */.updateScrollOffsetForScrollToIndex;\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps);\n\n    // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}", "import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"maxScrollSize\"];\n/*:: import type {Alignment, CellSizeGetter, VisibleCellRange} from '../types';*/\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n/*:: type ContainerSizeAndOffset = {\n  containerSize: number,\n  offset: number,\n};*/\n/*:: type Params = {\n  maxScrollSize?: number,\n  cellCount: number,\n  cellSizeGetter: CellSizeGetter,\n  estimatedCellSize: number,\n};*/\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager = /*#__PURE__*/function () {\n  function ScalingCellSizeAndPositionManager(_ref /*:: */) {\n    var _ref$maxScrollSize = _ref /*:: */.maxScrollSize,\n      maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n      params = _objectWithoutProperties(_ref /*:: */, _excluded);\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n  return _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() /*: boolean*/{\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params\n    /*: {\n        cellCount: number,\n        estimatedCellSize: number,\n        cellSizeGetter: CellSizeGetter,\n      }*/\n    ) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() /*: number*/{\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() /*: number*/{\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() /*: number*/{\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2 /*:: */) /*: number*/{\n      var containerSize = _ref2 /*:: */.containerSize,\n        offset = _ref2 /*:: */.offset;\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index /*: number*/) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n\n    /** See CellSizeAndPositionManager#getTotalSize */\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() /*: number*/{\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3 /*:: */) {\n      var _ref3$align = _ref3 /*:: */.align,\n        align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n        containerSize = _ref3 /*:: */.containerSize,\n        currentOffset = _ref3 /*:: */.currentOffset,\n        targetIndex = _ref3 /*:: */.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4 /*:: */) /*: VisibleCellRange*/{\n      var containerSize = _ref4 /*:: */.containerSize,\n        offset = _ref4 /*:: */.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index /*: number*/) /*: void*/{\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5 /*:: */) {\n      var containerSize = _ref5 /*:: */.containerSize,\n        offset = _ref5 /*:: */.offset,\n        totalSize = _ref5 /*:: */.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6 /*:: */) /*: number*/{\n      var containerSize = _ref6 /*:: */.containerSize,\n        offset = _ref6 /*:: */.offset;\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7 /*:: */) /*: number*/{\n      var containerSize = _ref7 /*:: */.containerSize,\n        offset = _ref7 /*:: */.offset;\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n}();\nexport { ScalingCellSizeAndPositionManager as default };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/*:: import type {Alignment, CellSizeGetter, VisibleCellRange} from '../types';*/\n/*:: type CellSizeAndPositionManagerParams = {\n  cellCount: number,\n  cellSizeGetter: CellSizeGetter,\n  estimatedCellSize: number,\n};*/\n/*:: type ConfigureParams = {\n  cellCount: number,\n  estimatedCellSize: number,\n  cellSizeGetter: CellSizeGetter,\n};*/\n/*:: type GetUpdatedOffsetForIndex = {\n  align: Alignment,\n  containerSize: number,\n  currentOffset: number,\n  targetIndex: number,\n};*/\n/*:: type GetVisibleCellRangeParams = {\n  containerSize: number,\n  offset: number,\n};*/\n/*:: type SizeAndPositionData = {\n  offset: number,\n  size: number,\n};*/\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager = /*#__PURE__*/function () {\n  function CellSizeAndPositionManager(_ref /*:: */) {\n    var cellCount = _ref /*:: */.cellCount,\n      cellSizeGetter = _ref /*:: */.cellSizeGetter,\n      estimatedCellSize = _ref /*:: */.estimatedCellSize;\n    _classCallCheck(this, CellSizeAndPositionManager);\n    // Cache of size and position data for cells, mapped by cell index.\n    // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n    // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n    // Used in deferred mode to track which cells have been queued for measurement.\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n    _defineProperty(this, \"_cellCount\", void 0);\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n  return _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2 /*:: */) {\n      var cellCount = _ref2 /*:: */.cellCount,\n        estimatedCellSize = _ref2 /*:: */.estimatedCellSize,\n        cellSizeGetter = _ref2 /*:: */.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() /*: number*/{\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() /*: number*/{\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() /*: number*/{\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index /*: number*/) /*: SizeAndPositionData*/{\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          });\n\n          // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() /*: SizeAndPositionData*/{\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() /*: number*/{\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3 /*:: */) /*: number*/{\n      var _ref3$align = _ref3 /*:: */.align,\n        align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n        containerSize = _ref3 /*:: */.containerSize,\n        currentOffset = _ref3 /*:: */.currentOffset,\n        targetIndex = _ref3 /*:: */.targetIndex;\n      if (containerSize <= 0) {\n        return 0;\n      }\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n        case 'end':\n          idealOffset = minOffset;\n          break;\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params /*: GetVisibleCellRangeParams*/) /*: VisibleCellRange*/{\n      var containerSize = params.containerSize,\n        offset = params.offset;\n      var totalSize = this.getTotalSize();\n      if (totalSize === 0) {\n        return {};\n      }\n      var maxOffset = offset + containerSize;\n      var start = this._findNearestCell(offset);\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index /*: number*/) /*: void*/{\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high /*: number*/, low /*: number*/, offset /*: number*/) /*: number*/{\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index /*: number*/, offset /*: number*/) /*: number*/{\n      var interval = 1;\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset /*: number*/) /*: number*/{\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      }\n\n      // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n}();\nexport { CellSizeAndPositionManager as default };", "var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\nexport var getMaxElementSize = function getMaxElementSize() /*: number*/{\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};", "/*:: import type {OverscanIndicesGetterParams, OverscanIndices} from './types';*/\nexport var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref /*:: */) /*: OverscanIndices*/{\n  var cellCount = _ref /*:: */.cellCount,\n    overscanCellsCount = _ref /*:: */.overscanCellsCount,\n    scrollDirection = _ref /*:: */.scrollDirection,\n    startIndex = _ref /*:: */.startIndex,\n    stopIndex = _ref /*:: */.stopIndex;\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}", "/*:: import type {Alignment, CellSize} from '../types';*/\nimport ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n/*:: type Params = {\n  // Width or height of cells for the current axis\n  cellSize?: CellSize,\n\n  // Manages size and position metadata of cells\n  cellSizeAndPositionManager: ScalingCellSizeAndPositionManager,\n\n  // Previous number of rows or columns\n  previousCellsCount: number,\n\n  // Previous width or height of cells\n  previousCellSize: CellSize,\n\n  previousScrollToAlignment: Alignment,\n\n  // Previous scroll-to-index\n  previousScrollToIndex: number,\n\n  // Previous width or height of the virtualized container\n  previousSize: number,\n\n  // Current scrollLeft or scrollTop\n  scrollOffset: number,\n\n  scrollToAlignment: Alignment,\n\n  // Scroll-to-index\n  scrollToIndex: number,\n\n  // Width or height of the virtualized container\n  size: number,\n\n  sizeJustIncreasedFromZero: boolean,\n\n  // Callback to invoke with an scroll-to-index value\n  updateScrollIndexCallback: (index: number) => void,\n};*/\nexport default function updateScrollIndexHelper(_ref /*:: */) {\n  var cellSize = _ref /*:: */.cellSize,\n    cellSizeAndPositionManager = _ref /*:: */.cellSizeAndPositionManager,\n    previousCellsCount = _ref /*:: */.previousCellsCount,\n    previousCellSize = _ref /*:: */.previousCellSize,\n    previousScrollToAlignment = _ref /*:: */.previousScrollToAlignment,\n    previousScrollToIndex = _ref /*:: */.previousScrollToIndex,\n    previousSize = _ref /*:: */.previousSize,\n    scrollOffset = _ref /*:: */.scrollOffset,\n    scrollToAlignment = _ref /*:: */.scrollToAlignment,\n    scrollToIndex = _ref /*:: */.scrollToIndex,\n    size = _ref /*:: */.size,\n    sizeJustIncreasedFromZero = _ref /*:: */.sizeJustIncreasedFromZero,\n    updateScrollIndexCallback = _ref /*:: */.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize;\n\n  // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex);\n\n    // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}", "/*:: import type {CellRangeRendererParams} from './types';*/\nimport React from 'react';\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\n\nexport default function defaultCellRangeRenderer(_ref /*:: */) {\n  var cellCache = _ref /*:: */.cellCache,\n    cellRenderer = _ref /*:: */.cellRenderer,\n    columnSizeAndPositionManager = _ref /*:: */.columnSizeAndPositionManager,\n    columnStartIndex = _ref /*:: */.columnStartIndex,\n    columnStopIndex = _ref /*:: */.columnStopIndex,\n    deferredMeasurementCache = _ref /*:: */.deferredMeasurementCache,\n    horizontalOffsetAdjustment = _ref /*:: */.horizontalOffsetAdjustment,\n    isScrolling = _ref /*:: */.isScrolling,\n    isScrollingOptOut = _ref /*:: */.isScrollingOptOut,\n    parent = _ref /*:: */.parent,\n    rowSizeAndPositionManager = _ref /*:: */.rowSizeAndPositionManager,\n    rowStartIndex = _ref /*:: */.rowStartIndex,\n    rowStopIndex = _ref /*:: */.rowStopIndex,\n    styleCache = _ref /*:: */.styleCache,\n    verticalOffsetAdjustment = _ref /*:: */.verticalOffsetAdjustment,\n    visibleColumnIndices = _ref /*:: */.visibleColumnIndices,\n    visibleRowIndices = _ref /*:: */.visibleRowIndices;\n  var renderedCells = [];\n\n  // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0;\n\n      // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0;\n\n      // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n        renderedCell = cellCache[key];\n\n        // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n      if (!renderedCell.props.role) {\n        renderedCell = /*#__PURE__*/React.cloneElement(renderedCell, {\n          role: 'gridcell'\n        });\n      }\n      renderedCells.push(renderedCell);\n    }\n  }\n  return renderedCells;\n}\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}", "import { caf, raf } from './animationFrame';\n/*:: export type AnimationTimeoutId = {\n  id: number,\n};*/\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame /*: AnimationTimeoutId*/) {\n  return caf(frame.id);\n};\n\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback /*: Function*/, delay /*: number*/) /*: AnimationTimeoutId*/{\n  var start;\n  // wait for end of processing current event handler, because event handler may be long\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n  var _timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(_timeout);\n    }\n  };\n  var frame /*: AnimationTimeoutId*/ = {\n    id: raf(_timeout)\n  };\n  return frame;\n};", "/*:: type Callback = (timestamp: number) => void;*/\n/*:: type CancelAnimationFrame = (requestId: number) => void;*/\n/*:: type RequestAnimationFrame = (callback: Callback) => number;*/\n// Properly handle server-side rendering.\nvar win;\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n}\n\n// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback /*: Callback*/) /*: RequestAnimationFrame*/{\n  return (win /*: any*/).setTimeout(callback, 1000 / 60);\n};\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id /*: number*/) {\n  (win /*: any*/).clearTimeout(id);\n};\nexport var raf /*: RequestAnimationFrame*/ = (request /*: any*/);\nexport var caf /*: CancelAnimationFrame*/ = (cancel /*: any*/);", "/*:: import type {OverscanIndicesGetterParams, OverscanIndices} from './types';*/\nexport var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref /*:: */) /*: OverscanIndices*/{\n  var cellCount = _ref /*:: */.cellCount,\n    overscanCellsCount = _ref /*:: */.overscanCellsCount,\n    scrollDirection = _ref /*:: */.scrollDirection,\n    startIndex = _ref /*:: */.startIndex,\n    stopIndex = _ref /*:: */.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}", "import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\nvar InfiniteLoader = /*#__PURE__*/function (_React$PureComponent) {\n  function InfiniteLoader(props, context) {\n    var _this;\n    _classCallCheck(this, InfiniteLoader);\n    _this = _callSuper(this, InfiniteLoader, [props, context]);\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n  _inherits(InfiniteLoader, _React$PureComponent);\n  return _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n        stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n        _this3 = this;\n      var _this$props = this.props,\n        isRowLoaded = _this$props.isRowLoaded,\n        minimumBatchSize = _this$props.minimumBatchSize,\n        rowCount = _this$props.rowCount,\n        threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      });\n\n      // For memoize comparison\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n          stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n    lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n    startIndex = _ref4.startIndex,\n    stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n    minimumBatchSize = _ref5.minimumBatchSize,\n    rowCount = _ref5.rowCount,\n    startIndex = _ref5.startIndex,\n    stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n    if (!loaded) {\n      rangeStopIndex = index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n  return unloadedRanges;\n}\n\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };", "function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };", "function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };", "/*:: export type {RowRendererParams} from './types';*/\nexport { default } from './List';\nexport { default as List } from './List';", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/*:: import type {\n  NoContentRenderer,\n  Alignment,\n  CellSize,\n  CellPosition,\n  OverscanIndicesGetter,\n  RenderedSection,\n  CellRendererParams,\n  Scroll as GridScroll,\n} from '../Grid';*/\n/*:: import type {RowRenderer, RenderedRows, Scroll} from './types';*/\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n/*:: type Props = {\n  'aria-label'?: string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   *-/\n  autoHeight: boolean,\n\n  /** Optional CSS class name *-/\n  className?: string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   *-/\n  estimatedRowSize: number,\n\n  /** Height constraint for list (determines how many actual rows are rendered) *-/\n  height: number,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 *-/\n  noRowsRenderer: NoContentRenderer,\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  *-/\n\n  onRowsRendered: (params: RenderedRows) => void,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   *-/\n  onScroll: (params: Scroll) => void,\n\n  /** See Grid#overscanIndicesGetter *-/\n  overscanIndicesGetter: OverscanIndicesGetter,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   *-/\n  overscanRowCount: number,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  *-/\n  rowHeight: CellSize,\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node *-/\n  rowRenderer: RowRenderer,\n\n  /** Number of rows in list. *-/\n  rowCount: number,\n\n  /** See Grid#scrollToAlignment *-/\n  scrollToAlignment: Alignment,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) *-/\n  scrollToIndex: number,\n\n  /** Vertical offset. *-/\n  scrollTop?: number,\n\n  /** Optional inline style *-/\n  style: Object,\n\n  /** Tab index for focus *-/\n  tabIndex?: number,\n\n  /** Width of list *-/\n  width: number,\n};*/\nvar List = /*#__PURE__*/function (_React$PureComponent) {\n  function List() {\n    var _this;\n    _classCallCheck(this, List);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, List, [].concat(args));\n    _defineProperty(_this, \"Grid\", void 0);\n    _defineProperty(_this, \"_cellRenderer\", function (_ref /*:: */) {\n      var parent = _ref /*:: */.parent,\n        rowIndex = _ref /*:: */.rowIndex,\n        style = _ref /*:: */.style,\n        isScrolling = _ref /*:: */.isScrolling,\n        isVisible = _ref /*:: */.isVisible,\n        key = _ref /*:: */.key;\n      var rowRenderer = _this.props.rowRenderer;\n\n      // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n    _defineProperty(_this, \"_setRef\", function (ref /*: ?React.ElementRef<typeof Grid>*/) {\n      _this.Grid = ref;\n    });\n    _defineProperty(_this, \"_onScroll\", function (_ref2 /*:: */) {\n      var clientHeight = _ref2 /*:: */.clientHeight,\n        scrollHeight = _ref2 /*:: */.scrollHeight,\n        scrollTop = _ref2 /*:: */.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n    _defineProperty(_this, \"_onSectionRendered\", function (_ref3 /*:: */) {\n      var rowOverscanStartIndex = _ref3 /*:: */.rowOverscanStartIndex,\n        rowOverscanStopIndex = _ref3 /*:: */.rowOverscanStopIndex,\n        rowStartIndex = _ref3 /*:: */.rowStartIndex,\n        rowStopIndex = _ref3 /*:: */.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n    return _this;\n  }\n  _inherits(List, _React$PureComponent);\n  return _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4 /*:: */) {\n      var alignment = _ref4 /*:: */.alignment,\n        index = _ref4 /*:: */.index;\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n            alignment: alignment,\n            rowIndex: index,\n            columnIndex: 0\n          }),\n          scrollTop = _this$Grid$getOffsetF.scrollTop;\n        return scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5 /*:: */) {\n      var columnIndex = _ref5 /*:: */.columnIndex,\n        rowIndex = _ref5 /*:: */.rowIndex;\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref6$columnIndex = _ref6.columnIndex,\n        columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n        _ref6$rowIndex = _ref6.rowIndex,\n        rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index /*: number*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop /*: number*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index /*: number*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        className = _this$props.className,\n        noRowsRenderer = _this$props.noRowsRenderer,\n        scrollToIndex = _this$props.scrollToIndex,\n        width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\nexport { List as default };", "import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };", "/*:: import type {CellMeasurerCache, Positioner} from './Masonry';*/\n/*:: type createCellPositionerParams = {\n  cellMeasurerCache: CellMeasurerCache,\n  columnCount: number,\n  columnWidth: number,\n  spacer?: number,\n};*/\n/*:: type resetParams = {\n  columnCount: number,\n  columnWidth: number,\n  spacer?: number,\n};*/\nexport default function createCellPositioner(_ref /*:: */) /*: Positioner*/{\n  var cellMeasurerCache = _ref /*:: */.cellMeasurerCache,\n    columnCount = _ref /*:: */.columnCount,\n    columnWidth = _ref /*:: */.columnWidth,\n    _ref$spacer = _ref /*:: */.spacer,\n    spacer = _ref$spacer === void 0 ? 0 : _ref$spacer;\n  var columnHeights;\n  initOrResetDerivedValues();\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n    return {\n      left: left,\n      top: top\n    };\n  }\n  function initOrResetDerivedValues() /*: void*/{\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n  function reset(params /*: resetParams*/) /*: void*/{\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n    initOrResetDerivedValues();\n  }\n  cellPositioner.reset = reset;\n  return cellPositioner;\n}", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/*:: import type {AnimationTimeoutId} from '../utils/requestAnimationTimeout';*/\n/*:: type Props = {\n  autoHeight: boolean,\n  cellCount: number,\n  cellMeasurerCache: CellMeasurerCache,\n  cellPositioner: Positioner,\n  cellRenderer: CellRenderer,\n  className: ?string,\n  height: number,\n  id: ?string,\n  keyMapper: KeyMapper,\n  onCellsRendered: ?OnCellsRenderedCallback,\n  onScroll: ?OnScrollCallback,\n  overscanByPixels: number,\n  role: string,\n  scrollingResetTimeInterval: number,\n  style: mixed,\n  tabIndex: number,\n  width: number,\n  rowDirection: string,\n  scrollTop?: number,\n};*/\n/*:: type State = {\n  isScrolling: boolean,\n  scrollTop: number,\n};*/\nvar emptyObject = {};\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\nvar Masonry = /*#__PURE__*/function (_React$PureComponent) {\n  function Masonry() {\n    var _this;\n    _classCallCheck(this, Masonry);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Masonry, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n    _defineProperty(_this, \"_debounceResetIsScrollingId\", void 0);\n    _defineProperty(_this, \"_invalidateOnUpdateStartIndex\", null);\n    _defineProperty(_this, \"_invalidateOnUpdateStopIndex\", null);\n    _defineProperty(_this, \"_positionCache\", new PositionCache());\n    _defineProperty(_this, \"_startIndex\", null);\n    _defineProperty(_this, \"_startIndexMemoized\", null);\n    _defineProperty(_this, \"_stopIndex\", null);\n    _defineProperty(_this, \"_stopIndexMemoized\", null);\n    _defineProperty(_this, \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n    _defineProperty(_this, \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    _defineProperty(_this, \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop);\n\n      // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n      if (eventScrollTop !== scrollTop) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._debounceResetIsScrolling();\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n    return _this;\n  }\n  _inherits(Masonry, _React$PureComponent);\n  return _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    }\n\n    // HACK This method signature was intended for Grid\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        autoHeight = _this$props.autoHeight,\n        cellCount = _this$props.cellCount,\n        cellMeasurerCache = _this$props.cellMeasurerCache,\n        cellRenderer = _this$props.cellRenderer,\n        className = _this$props.className,\n        height = _this$props.height,\n        id = _this$props.id,\n        keyMapper = _this$props.keyMapper,\n        overscanByPixels = _this$props.overscanByPixels,\n        role = _this$props.role,\n        style = _this$props.style,\n        tabIndex = _this$props.tabIndex,\n        width = _this$props.width,\n        rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n        isScrolling = _this$state.isScrolling,\n        scrollTop = _this$state.scrollTop;\n      var children = [];\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index /*: number*/, left /*: number*/, top /*: number*/) {\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: _defineProperty(_defineProperty(_defineProperty(_defineProperty({\n            height: cellMeasurerCache.getHeight(index)\n          }, rowDirection === 'ltr' ? 'left' : 'right', left), \"position\", 'absolute'), \"top\", top), \"width\", cellMeasurerCache.getWidth(index))\n        }));\n      });\n\n      // We need to measure additional cells for this layout\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null;\n\n        // Query external layout logic for position of newly-measured cells\n        this._populatePositionCache(startIndex, stopIndex);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n        cellCount = _this$props2.cellCount,\n        cellMeasurerCache = _this$props2.cellMeasurerCache,\n        width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n        height = _this$props3.height,\n        onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex /*: number*/, stopIndex /*: number*/) {\n      var _this$props4 = this.props,\n        cellMeasurerCache = _this$props4.cellMeasurerCache,\n        cellPositioner = _this$props4.cellPositioner;\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n          left = _cellPositioner.left,\n          top = _cellPositioner.top;\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State>*/{\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\nfunction identity(value) {\n  return value;\n}\nfunction noop() {}\n/*:: type KeyMapper = (index: number) => mixed;*/\n/*:: export type CellMeasurerCache = {\n  defaultHeight: number,\n  defaultWidth: number,\n  getHeight: (index: number) => number,\n  getWidth: (index: number) => number,\n};*/\n/*:: type CellRenderer = (params: {|\n  index: number,\n  isScrolling: boolean,\n  key: mixed,\n  parent: mixed,\n  style: mixed,\n|}) => mixed;*/\n/*:: type OnCellsRenderedCallback = (params: {|\n  startIndex: number,\n  stopIndex: number,\n|}) => void;*/\n/*:: type OnScrollCallback = (params: {|\n  clientHeight: number,\n  scrollHeight: number,\n  scrollTop: number,\n|}) => void;*/\n/*:: type Position = {\n  left: number,\n  top: number,\n};*/\npolyfill(Masonry);\nexport default Masonry;\n/*:: export type Positioner = (index: number) => Position;*/", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n/*:: type RenderCallback = (index: number, left: number, top: number) => void;*/\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache = /*#__PURE__*/function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n    // Tracks the height of each column\n    _defineProperty(this, \"_columnSizeMap\", {});\n    // Store tops and bottoms of each cell for fast intersection lookup.\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n    // Maps cell index to x coordinates for quick lookup.\n    _defineProperty(this, \"_leftMap\", {});\n  }\n  return _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount /*: number*/, columnCount /*: number*/, defaultCellHeight /*: number*/) /*: number*/{\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    }\n\n    // Render all cells visible within the viewport range defined.\n  }, {\n    key: \"range\",\n    value: function range(scrollTop /*: number*/, clientHeight /*: number*/, renderCallback /*: RenderCallback*/) /*: void*/{\n      var _this = this;\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n          top = _ref2[0],\n          _ = _ref2[1],\n          index = _ref2[2];\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index /*: number*/, left /*: number*/, top /*: number*/, height /*: number*/) /*: void*/{\n      this._intervalTree.insert([top, top + height, index]);\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() /*: number*/{\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() /*: number*/{\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[(i /*: any*/)];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() /*: number*/{\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[(i /*: any*/)];\n        size = Math.max(size, height);\n      }\n      return size;\n    }\n  }]);\n}();\nexport { PositionCache as default };", "/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\nvar proto = IntervalTreeNode.prototype;\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n  if (this.left) {\n    this.left.intervals(result);\n  }\n  if (this.right) {\n    this.right.intervals(result);\n  }\n  return result;\n};\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n    var rw = this.right ? this.right.count : 0;\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.left.remove(interval);\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n    var lw = this.left ? this.left.count : 0;\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.right.remove(interval);\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n      return SUCCESS;\n    }\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n    return NOT_FOUND;\n  }\n};\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\nfunction compareNumbers(a, b) {\n  return a - b;\n}\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n  if (d) {\n    return d;\n  }\n  return a[1] - b[1];\n}\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n  if (d) {\n    return d;\n  }\n  return a[0] - b[0];\n}\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n  var pts = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  }\n\n  //Split center intervals\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n  this.root = root;\n}\nvar tproto = IntervalTree.prototype;\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n    if (r === EMPTY) {\n      this.root = null;\n    }\n    return r !== NOT_FOUND;\n  }\n  return false;\n};\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n  return new IntervalTree(createIntervalTree(intervals));\n}", "/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\nfunction _EQA(a, l, h, y) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n      x = a[m];\n    var p = c(x, y);\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};", "import MultiGrid from './MultiGrid';\nexport default MultiGrid;\nexport { MultiGrid };", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"rowIndex\"],\n  _excluded2 = [\"columnIndex\", \"rowIndex\"],\n  _excluded3 = [\"columnIndex\"],\n  _excluded4 = [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\nvar MultiGrid = /*#__PURE__*/function (_React$PureComponent) {\n  function MultiGrid(props, context) {\n    var _this;\n    _classCallCheck(this, MultiGrid);\n    _this = _callSuper(this, MultiGrid, [props, context]);\n    _defineProperty(_this, \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    _defineProperty(_this, \"_deferredInvalidateColumnIndex\", null);\n    _defineProperty(_this, \"_deferredInvalidateRowIndex\", null);\n    _defineProperty(_this, \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    _defineProperty(_this, \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n        rest = _objectWithoutProperties(_ref, _excluded);\n      var _this$props = _this.props,\n        cellRenderer = _this$props.cellRenderer,\n        fixedRowCount = _this$props.fixedRowCount,\n        rowCount = _this$props.rowCount;\n      if (rowIndex === rowCount - fixedRowCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          parent: _this,\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    _defineProperty(_this, \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n        rowIndex = _ref2.rowIndex,\n        rest = _objectWithoutProperties(_ref2, _excluded2);\n      var _this$props2 = _this.props,\n        cellRenderer = _this$props2.cellRenderer,\n        fixedColumnCount = _this$props2.fixedColumnCount,\n        fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    _defineProperty(_this, \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n        rest = _objectWithoutProperties(_ref3, _excluded3);\n      var _this$props3 = _this.props,\n        cellRenderer = _this$props3.cellRenderer,\n        columnCount = _this$props3.columnCount,\n        fixedColumnCount = _this$props3.fixedColumnCount;\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread(_objectSpread({}, rest.style), {}, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread(_objectSpread({}, rest), {}, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _this\n        }));\n      }\n    });\n    _defineProperty(_this, \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n        columnCount = _this$props4.columnCount,\n        fixedColumnCount = _this$props4.fixedColumnCount,\n        columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n        scrollbarSize = _this$state.scrollbarSize,\n        showHorizontalScrollbar = _this$state.showHorizontalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    _defineProperty(_this, \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n      var onScroll = _this.props.onScroll;\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    _defineProperty(_this, \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n        size = _ref5.size,\n        vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n        showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n        showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    _defineProperty(_this, \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    _defineProperty(_this, \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    _defineProperty(_this, \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n        fixedRowCount = _this$props5.fixedRowCount,\n        rowCount = _this$props5.rowCount,\n        rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n        scrollbarSize = _this$state3.scrollbarSize,\n        showVerticalScrollbar = _this$state3.showVerticalScrollbar;\n\n      // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    _defineProperty(_this, \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    _defineProperty(_this, \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n      _fixedColumnCount = props.fixedColumnCount,\n      _fixedRowCount = props.fixedRowCount;\n    _this._maybeCalculateCachedStyles(true);\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n  _inherits(MultiGrid, _React$PureComponent);\n  return _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref7$columnIndex = _ref7.columnIndex,\n        columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n        _ref7$rowIndex = _ref7.rowIndex,\n        rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref8$columnIndex = _ref8.columnIndex,\n        columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n        _ref8$rowIndex = _ref8.rowIndex,\n        rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n      var _this$props6 = this.props,\n        fixedColumnCount = _this$props6.fixedColumnCount,\n        fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n        scrollLeft = _this$props7.scrollLeft,\n        scrollTop = _this$props7.scrollTop;\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        onScroll = _this$props8.onScroll,\n        onSectionRendered = _this$props8.onSectionRendered,\n        onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n        scrollLeftProp = _this$props8.scrollLeft,\n        scrollToColumn = _this$props8.scrollToColumn,\n        scrollTopProp = _this$props8.scrollTop,\n        scrollToRow = _this$props8.scrollToRow,\n        rest = _objectWithoutProperties(_this$props8, _excluded4);\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _this$state4 = this.state,\n        scrollLeft = _this$state4.scrollLeft,\n        scrollTop = _this$state4.scrollTop;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread(_objectSpread({}, rest), {}, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n      var topGridHeight = this._getTopGridHeight(props);\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        columnWidth = props.columnWidth;\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n      var leftGridWidth = this._getLeftGridWidth(props);\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n        rowHeight = props.rowHeight;\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n        columnWidth = _this$props9.columnWidth,\n        enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n        enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n        height = _this$props9.height,\n        fixedColumnCount = _this$props9.fixedColumnCount,\n        fixedRowCount = _this$props9.fixedRowCount,\n        rowHeight = _this$props9.rowHeight,\n        style = _this$props9.style,\n        styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n        styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n        styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n        styleTopRightGrid = _this$props9.styleTopRightGrid,\n        width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n      this._maybeCalculateCachedStyles();\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n      if (!fixedColumnCount) {\n        return null;\n      }\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n        height = this._getBottomGridHeight(props),\n        width = this._getLeftGridWidth(props),\n        scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n        gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n      var bottomLeftGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n      if (hideBottomLeftGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._bottomLeftGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        rowCount = props.rowCount,\n        scrollToColumn = props.scrollToColumn,\n        scrollToRow = props.scrollToRow;\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n        enableFixedRowScroll = props.enableFixedRowScroll,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount,\n        scrollLeft = props.scrollLeft,\n        hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n        showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n        scrollbarSize = _this$state5.scrollbarSize;\n      if (!fixedRowCount) {\n        return null;\n      }\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n        height = this._getTopGridHeight(props),\n        width = this._getRightGridWidth(props),\n        additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n      var gridHeight = height,\n        style = this._topRightGridStyle;\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n          left: 0\n        });\n      }\n      var topRightGrid = /*#__PURE__*/React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n      if (hideTopRightGridScrollbar) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread(_objectSpread({}, this._topRightGridStyle), {}, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n      return null;\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n/*:: type CellMeasurerCacheDecoratorParams = {\n  cellMeasurerCache: CellMeasurerCache,\n  columnIndexOffset: number,\n  rowIndexOffset: number,\n};*/\n/*:: type IndexParam = {\n  index: number,\n};*/\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator = /*#__PURE__*/function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n    var params /*: CellMeasurerCacheDecoratorParams*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n    _defineProperty(this, \"columnWidth\", function (_ref /*:: */) {\n      var index = _ref /*:: */.index;\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    _defineProperty(this, \"rowHeight\", function (_ref2 /*:: */) {\n      var index = _ref2 /*:: */.index;\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n      _params$columnIndexOf = params.columnIndexOffset,\n      columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n      _params$rowIndexOffse = params.rowIndexOffset,\n      rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n  return _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex /*: number*/, columnIndex /*: number*/) /*: void*/{\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() /*: void*/{\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() /*: number*/{\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() /*: number*/{\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() /*: boolean*/{\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() /*: boolean*/{\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex /*: number*/) /*: ?number*/{\n      var columnIndex /*: ?number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex /*: number*/) /*: ?number*/{\n      var columnIndex /*: ?number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex /*: number*/) /*: boolean*/{\n      var columnIndex /*: ?number*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex /*: number*/, columnIndex /*: number*/, width /*: number*/, height /*: number*/) /*: void*/{\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, (width /*: number*/), (height /*: number*/));\n    }\n  }]);\n}();\nexport { CellMeasurerCacheDecorator as default };", "import ScrollSync from './ScrollSync';\nexport default ScrollSync;\nexport { ScrollSync };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\nvar ScrollSync = /*#__PURE__*/function (_React$PureComponent) {\n  function ScrollSync(props, context) {\n    var _this;\n    _classCallCheck(this, ScrollSync);\n    _this = _callSuper(this, ScrollSync, [props, context]);\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_this);\n    return _this;\n  }\n  _inherits(ScrollSync, _React$PureComponent);\n  return _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n        clientHeight = _this$state.clientHeight,\n        clientWidth = _this$state.clientWidth,\n        scrollHeight = _this$state.scrollHeight,\n        scrollLeft = _this$state.scrollLeft,\n        scrollTop = _this$state.scrollTop,\n        scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n        clientWidth = _ref.clientWidth,\n        scrollHeight = _ref.scrollHeight,\n        scrollLeft = _ref.scrollLeft,\n        scrollTop = _ref.scrollTop,\n        scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n}(React.PureComponent);\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};", "import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };", "/*:: type SortDirection = 'ASC' | 'DESC';*/\n/*:: type SortParams = {\n  defaultSortDirection: SortDirection,\n  event: MouseEvent,\n  sortBy: string,\n};*/\n/*:: type SortDirectionMap = {[string]: SortDirection};*/\n/*:: type MultiSortOptions = {\n  defaultSortBy: ?Array<string>,\n  defaultSortDirection: ?SortDirectionMap,\n};*/\n/*:: type MultiSortReturn = {\n  /**\n   * Sort property to be passed to the `Table` component.\n   * This function updates `sortBy` and `sortDirection` values.\n   *-/\n  sort: (params: SortParams) => void,\n\n  /**\n   * Specifies the fields currently responsible for sorting data,\n   * In order of importance.\n   *-/\n  sortBy: Array<string>,\n\n  /**\n   * Specifies the direction a specific field is being sorted in.\n   *-/\n  sortDirection: SortDirectionMap,\n};*/\nexport default function createMultiSort(sortCallback /*: Function*/) /*: MultiSortReturn*/{\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    defaultSortBy = _ref.defaultSortBy,\n    _ref$defaultSortDirec = _ref.defaultSortDirection,\n    defaultSortDirection = _ref$defaultSortDirec === void 0 ? {} : _ref$defaultSortDirec;\n  if (!sortCallback) {\n    throw Error(\"Required parameter \\\"sortCallback\\\" not specified\");\n  }\n  var sortBy = defaultSortBy || [];\n  var sortDirection = {};\n  sortBy.forEach(function (dataKey) {\n    sortDirection[dataKey] = defaultSortDirection[dataKey] !== undefined ? defaultSortDirection[dataKey] : 'ASC';\n  });\n  function sort(_ref2 /*:: */) /*: void*/{\n    var defaultSortDirection = _ref2 /*:: */.defaultSortDirection,\n      event = _ref2 /*:: */.event,\n      dataKey = _ref2 /*:: */.sortBy;\n    if (event.shiftKey) {\n      // Shift + click appends a column to existing criteria\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n        sortBy.push(dataKey);\n      }\n    } else if (event.ctrlKey || event.metaKey) {\n      // Control + click removes column from sort (if pressent)\n      var index = sortBy.indexOf(dataKey);\n      if (index >= 0) {\n        sortBy.splice(index, 1);\n        delete sortDirection[dataKey];\n      }\n    } else {\n      // Clear sortBy array of all non-selected keys\n      sortBy.length = 0;\n      sortBy.push(dataKey);\n\n      // Clear sortDirection object of all non-selected keys\n      var sortDirectionKeys = Object.keys(sortDirection);\n      sortDirectionKeys.forEach(function (key) {\n        if (key !== dataKey) delete sortDirection[key];\n      });\n\n      // If key is already selected, reverse sort direction.\n      // Else, set sort direction to default direction.\n      if (sortDirection[dataKey] !== undefined) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n      }\n    }\n\n    // Notify application code\n    sortCallback({\n      sortBy: sortBy,\n      sortDirection: sortDirection\n    });\n  }\n  return {\n    sort: sort,\n    sortBy: sortBy,\n    sortDirection: sortDirection\n  };\n}", "/*:: import type {CellDataGetterParams} from './types';*/\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref /*:: */) {\n  var dataKey = _ref /*:: */.dataKey,\n    rowData = _ref /*:: */.rowData;\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}", "/*:: import type {CellRendererParams} from './types';*/\n/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref /*:: */) /*: string*/{\n  var cellData = _ref /*:: */.cellData;\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}", "import * as React from 'react';\n/*:: import type {HeaderRowRendererParams} from './types';*/\nexport default function defaultHeaderRowRenderer(_ref /*:: */) {\n  var className = _ref /*:: */.className,\n    columns = _ref /*:: */.columns,\n    style = _ref /*:: */.style;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}", "import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n/*:: import type {HeaderRendererParams} from './types';*/\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref /*:: */) {\n  var dataKey = _ref /*:: */.dataKey,\n    label = _ref /*:: */.label,\n    sortBy = _ref /*:: */.sortBy,\n    sortDirection = _ref /*:: */.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [/*#__PURE__*/React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n  if (showSortIndicator) {\n    children.push(/*#__PURE__*/React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n  return children;\n}", "import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};", "var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;", "import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n/*:: import type {RowRendererParams} from './types';*/\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref /*:: */) {\n  var className = _ref /*:: */.className,\n    columns = _ref /*:: */.columns,\n    index = _ref /*:: */.index,\n    key = _ref /*:: */.key,\n    onRowClick = _ref /*:: */.onRowClick,\n    onRowDoubleClick = _ref /*:: */.onRowDoubleClick,\n    onRowMouseOut = _ref /*:: */.onRowMouseOut,\n    onRowMouseOver = _ref /*:: */.onRowMouseOver,\n    onRowRightClick = _ref /*:: */.onRowRightClick,\n    rowData = _ref /*:: */.rowData,\n    style = _ref /*:: */.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}", "import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n\n/**\n * Describes the header and cell contents of a table column.\n */\nvar Column = /*#__PURE__*/function (_React$Component) {\n  function Column() {\n    _classCallCheck(this, Column);\n    return _callSuper(this, Column, arguments);\n  }\n  _inherits(Column, _React$Component);\n  return _createClass(Column);\n}(React.Component);\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n  /** Header label for this column */\n  label: PropTypes.node,\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/*:: import type {CellPosition} from '../Grid';*/\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\nvar Table = /*#__PURE__*/function (_React$PureComponent) {\n  function Table(props) {\n    var _this;\n    _classCallCheck(this, Table);\n    _this = _callSuper(this, Table, [props]);\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    _this._setGridElementRef = _this._setGridElementRef.bind(_this);\n    return _this;\n  }\n  _inherits(Table, _React$PureComponent);\n  return _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n        index = _ref.index;\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n            alignment: alignment,\n            rowIndex: index\n          }),\n          scrollTop = _this$Grid$getOffsetF.scrollTop;\n        return scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2 /*:: */) {\n      var columnIndex = _ref2 /*:: */.columnIndex,\n        rowIndex = _ref2 /*:: */.rowIndex;\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$columnIndex = _ref3.columnIndex,\n        columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n        _ref3$rowIndex = _ref3.rowIndex,\n        rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.GridElement) {\n        var _Grid = this.GridElement;\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        disableHeader = _this$props.disableHeader,\n        gridClassName = _this$props.gridClassName,\n        gridStyle = _this$props.gridStyle,\n        headerHeight = _this$props.headerHeight,\n        headerRowRenderer = _this$props.headerRowRenderer,\n        height = _this$props.height,\n        id = _this$props.id,\n        noRowsRenderer = _this$props.noRowsRenderer,\n        rowClassName = _this$props.rowClassName,\n        rowStyle = _this$props.rowStyle,\n        scrollToIndex = _this$props.scrollToIndex,\n        style = _this$props.style,\n        width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle;\n\n      // Precompute and cache column styles before rendering rows and columns to speed things up\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style || Column.defaultProps.style);\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      });\n\n      // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), /*#__PURE__*/React.createElement(Grid, _extends({}, this.props, {\n        elementRef: this._setGridElementRef,\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread(_objectSpread({}, gridStyle), {}, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n        columnIndex = _ref4.columnIndex,\n        isScrolling = _ref4.isScrolling,\n        parent = _ref4.parent,\n        rowData = _ref4.rowData,\n        rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n        cellDataGetter = _column$props.cellDataGetter,\n        cellRenderer = _column$props.cellRenderer,\n        className = _column$props.className,\n        columnData = _column$props.columnData,\n        dataKey = _column$props.dataKey,\n        id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null;\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n        index = _ref5.index;\n      var _this$props2 = this.props,\n        headerClassName = _this$props2.headerClassName,\n        headerStyle = _this$props2.headerStyle,\n        onHeaderClick = _this$props2.onHeaderClick,\n        sort = _this$props2.sort,\n        sortBy = _this$props2.sortBy,\n        sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n        columnData = _column$props2.columnData,\n        dataKey = _column$props2.dataKey,\n        defaultSortDirection = _column$props2.defaultSortDirection,\n        disableSort = _column$props2.disableSort,\n        headerRenderer = _column$props2.headerRenderer,\n        id = _column$props2.id,\n        label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n      var style = this._getFlexStyleForColumn(column, _objectSpread(_objectSpread({}, headerStyle), column.props.headerStyle));\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey;\n\n        // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      }\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n      var index = _ref6.rowIndex,\n        isScrolling = _ref6.isScrolling,\n        key = _ref6.key,\n        parent = _ref6.parent,\n        style = _ref6.style;\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        onRowClick = _this$props3.onRowClick,\n        onRowDoubleClick = _this$props3.onRowDoubleClick,\n        onRowRightClick = _this$props3.onRowRightClick,\n        onRowMouseOver = _this$props3.onRowMouseOver,\n        onRowMouseOut = _this$props3.onRowMouseOut,\n        rowClassName = _this$props3.rowClassName,\n        rowGetter = _this$props3.rowGetter,\n        rowRenderer = _this$props3.rowRenderer,\n        rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n      var flattenedStyle = _objectSpread(_objectSpread({}, style), {}, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n      var style = _objectSpread(_objectSpread({}, customStyle), {}, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n      var _this$props4 = this.props,\n        children = _this$props4.children,\n        disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n        scrollHeight = _ref7.scrollHeight,\n        scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n        rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n        rowStartIndex = _ref8.rowStartIndex,\n        rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setGridElementRef\",\n    value: function _setGridElementRef(ref) {\n      this.GridElement = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n  /** Optional CSS class name */\n  className: PropTypes.string,\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n  /** Optional id */\n  id: PropTypes.string,\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n  /** Optional inline style */\n  style: PropTypes.object,\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};", "import WindowScroller, { IS_SCROLLING_TIMEOUT } from './WindowScroller';\nexport default WindowScroller;\nexport { WindowScroller, IS_SCROLLING_TIMEOUT };", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n/*:: type Props = {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   *-/\n  children: ({\n    onChildScroll: ({scrollTop: number}) => void,\n    registerChild: (?Element) => void,\n    height: number,\n    isScrolling: boolean,\n    scrollLeft: number,\n    scrollTop: number,\n    width: number,\n  }) => React.Node,\n\n  /** Callback to be invoked on-resize: ({ height, width }) *-/\n  onResize: ({height: number, width: number}) => void,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) *-/\n  onScroll: ({scrollLeft: number, scrollTop: number}) => void,\n\n  /** Element to attach scroll event listeners. Defaults to window. *-/\n  scrollElement: ?(typeof window | Element),\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   *-/\n  scrollingResetTimeInterval: number,\n\n  /** Height used for server-side rendering *-/\n  serverHeight: number,\n\n  /** Width used for server-side rendering *-/\n  serverWidth: number,\n\n  /** Force scrollTop updates when .updatePosition is called, fixing forced header height change updates *-/\n  updateScrollTopOnUpdatePosition?: boolean,\n};*/\n/*:: type State = {\n  height: number,\n  width: number,\n  isScrolling: boolean,\n  scrollLeft: number,\n  scrollTop: number,\n};*/\n/*:: type ResizeHandler = (element: Element, onResize: () => void) => void;*/\n/*:: type DetectElementResize = {\n  addResizeListener: ResizeHandler,\n  removeResizeListener: ResizeHandler,\n};*/\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\nvar WindowScroller = /*#__PURE__*/function (_React$PureComponent) {\n  function WindowScroller() {\n    var _this;\n    _classCallCheck(this, WindowScroller);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, WindowScroller, [].concat(args));\n    _defineProperty(_this, \"_window\", getWindow());\n    _defineProperty(_this, \"_isMounted\", false);\n    _defineProperty(_this, \"_positionFromTop\", 0);\n    _defineProperty(_this, \"_positionFromLeft\", 0);\n    _defineProperty(_this, \"_detectElementResize\", void 0);\n    _defineProperty(_this, \"_child\", void 0);\n    _defineProperty(_this, \"_windowScrollerRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_this, \"state\", _objectSpread(_objectSpread({}, getDimensions(_this.props.scrollElement, _this.props)), {}, {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n    _defineProperty(_this, \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n      _this._child = element;\n      _this.updatePosition();\n    });\n    _defineProperty(_this, \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n    _defineProperty(_this, \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n    _defineProperty(_this, \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n    _defineProperty(_this, \"_onResize\", function () {\n      _this.updatePosition();\n    });\n    // Referenced by utils/onScroll\n    _defineProperty(_this, \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n    // Referenced by utils/onScroll\n    _defineProperty(_this, \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n    return _this;\n  }\n  _inherits(WindowScroller, _React$PureComponent);\n  return _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement /*: ?Element*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n        height = _this$state.height,\n        width = _this$state.width;\n      var thisNode = this._child || this._windowScrollerRef.current;\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n      var dimensions = getDimensions(scrollElement, this.props);\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n      if (this.props.updateScrollTopOnUpdatePosition === true) {\n        this.__handleWindowScrollEvent();\n        this.__resetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n        this._unregisterResizeListener(prevScrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n        this._unregisterResizeListener(scrollElement);\n      }\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n        isScrolling = _this$state2.isScrolling,\n        scrollTop = _this$state2.scrollTop,\n        scrollLeft = _this$state2.scrollLeft,\n        height = _this$state2.height,\n        width = _this$state2.width;\n      return /*#__PURE__*/React.createElement('div', {\n        ref: this._windowScrollerRef\n      }, children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      }));\n    }\n  }]);\n}(React.PureComponent);\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\nexport { WindowScroller as default };", "'no babel-plugin-flow-react-proptypes';\n\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\n/*:: import type WindowScroller from '../WindowScroller.js';*/\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n    originalBodyPointerEvents = null;\n  }\n}\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\nfunction onScrollWindow(event /*: Event*/) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\nexport function registerScrollListener(component /*: WindowScroller*/, element /*: Element*/) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component /*: WindowScroller*/, element /*: Element*/) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}", "/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n/*:: type Dimensions = {\n  height: number,\n  width: number,\n};*/\n// TODO Move this into WindowScroller and import from there\n/*:: type WindowScrollerProps = {\n  serverHeight: number,\n  serverWidth: number,\n};*/\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\nexport function getDimensions(scrollElement /*: ?Element*/, props /*: WindowScrollerProps*/) /*: Dimensions*/{\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n      innerHeight = _window.innerHeight,\n      innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\nexport function getPositionOffset(element /*: Element*/, container /*: Element*/) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n    var _elementRect = getBoundingBox(element);\n    var _containerRect = getBoundingBox(container);\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\nexport function getScrollOffset(element /*: Element*/) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}"],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "t", "import_dist", "import_dist", "Component", "r", "t", "_isNativeReflectConstruct", "ArrowKeyStepper", "children", "import_dist", "import_dist", "React", "import_dist", "raf", "cancel", "resetTriggers", "checkTriggers", "scrollListener", "createStyles", "addResizeListener", "removeResizeListener", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "AutoSizer", "onResize", "win", "children", "import_dist", "import_dist", "React", "_callSuper", "_isNativeReflectConstruct", "t", "CellMeasurer", "children", "import_dist", "CellMeasurerCache", "get", "import_dist", "import_dist", "import_dist", "import_prop_types", "React", "import_dist", "import_dist", "React", "import_dist", "import_dist", "import_dist", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "CollectionView", "onSectionRendered", "scrollbarSize", "noContentRenderer", "scrollLeft", "scrollTop", "onScroll", "PropTypes", "import_dist", "import_dist", "import_dist", "Section", "SectionManager", "import_dist", "_callSuper", "_isNativeReflectConstruct", "t", "Collection", "calculateSizeAndPositionData", "PropTypes", "import_dist", "import_dist", "import_prop_types", "React", "_callSuper", "_isNativeReflectConstruct", "t", "ColumnSizer", "children", "PropTypes", "import_dist", "import_dist", "React", "import_dist", "import_dist", "import_dist", "CellSizeAndPositionManager", "size", "getUpdatedOffsetForIndex", "import_dist", "isBrowser", "isChrome", "getMaxElementSize", "ScalingCellSizeAndPositionManager", "getUpdatedOffsetForIndex", "import_dist", "import_dist", "size", "import_dist", "import_react", "React", "import_dist", "import_dist", "cancelAnimationTimeout", "requestAnimationTimeout", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "SCROLL_POSITION_CHANGE_REASONS", "renderNull", "Grid", "onSectionRendered", "scrollbarSize", "stateUpdate", "noContentRenderer", "scrollLeft", "scrollTop", "onScroll", "onScrollbarPresenceChange", "import_dist", "SCROLL_DIRECTION_FORWARD", "defaultOverscanIndicesGetter", "SCROLL_DIRECTION_FORWARD", "import_dist", "import_dist", "import_dist", "import_dist", "r", "import_dist", "r", "import_dist", "r", "React", "import_prop_types", "_callSuper", "_isNativeReflectConstruct", "t", "InfiniteLoader", "children", "startIndex", "stopIndex", "PropTypes", "import_dist", "import_dist", "React", "_callSuper", "_isNativeReflectConstruct", "t", "List", "onScroll", "onRowsRendered", "noRowsRenderer", "defaultOverscanIndicesGetter", "import_dist", "import_dist", "import_dist", "React", "import_dist", "import_dist", "import_dist", "r", "get", "PositionCache", "get", "size", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "DEFAULT_SCROLLING_RESET_TIME_INTERVAL", "Masonry", "children", "onScroll", "import_dist", "import_dist", "import_prop_types", "React", "import_dist", "CellMeasurerCacheDecorator", "get", "_excluded", "_excluded2", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "MultiGrid", "scrollbarSize", "onScroll", "size", "onScrollbarPresenceChange", "onSectionRendered", "PropTypes", "import_dist", "import_dist", "import_prop_types", "React", "_callSuper", "_isNativeReflectConstruct", "t", "ScrollSync", "children", "PropTypes", "import_dist", "import_dist", "defaultSortDirection", "import_dist", "import_dist", "import_dist", "React", "import_dist", "React", "import_dist", "import_prop_types", "React", "import_dist", "PropTypes", "children", "import_dist", "React", "import_dist", "import_prop_types", "React", "_callSuper", "_isNativeReflectConstruct", "t", "Column", "PropTypes", "import_dist", "import_prop_types", "React", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "Table", "children", "noRowsRenderer", "onClick", "onKeyDown", "onScroll", "onRowsRendered", "defaultOverscanIndicesGetter", "PropTypes", "children", "import_dist", "import_dist", "React", "import_dist", "import_dist", "isWindow", "getBoundingBox", "ownKeys", "r", "_objectSpread", "_callSuper", "_isNativeReflectConstruct", "t", "IS_SCROLLING_TIMEOUT", "getWindow", "WindowScroller", "onScroll", "onResize", "children"]
}
