import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_prop_types
} from "./chunk-KRDER7BG.js";
import {
  require_react
} from "./chunk-FLN3JEFK.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-XN4GCD7D.js";

// ../node_modules/react-flip-toolkit/lib/index.es.js
var import_dist7 = __toESM(require_dist());
var import_dist8 = __toESM(require_dist2());
var import_dist9 = __toESM(require_dist3());
var import_react = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// ../node_modules/flip-toolkit/lib/index.es.js
var import_dist4 = __toESM(require_dist());
var import_dist5 = __toESM(require_dist2());
var import_dist6 = __toESM(require_dist3());

// ../node_modules/rematrix/dist/rematrix.es.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
function format(source) {
  if (source.constructor !== Array) {
    throw new TypeError("Expected array.");
  }
  if (source.length === 16) {
    return source;
  }
  if (source.length === 6) {
    var matrix = identity();
    matrix[0] = source[0];
    matrix[1] = source[1];
    matrix[4] = source[2];
    matrix[5] = source[3];
    matrix[12] = source[4];
    matrix[13] = source[5];
    return matrix;
  }
  throw new RangeError("Expected array with either 6 or 16 values.");
}
function identity() {
  var matrix = [];
  for (var i3 = 0; i3 < 16; i3++) {
    i3 % 5 == 0 ? matrix.push(1) : matrix.push(0);
  }
  return matrix;
}
function multiply(m3, x2) {
  var fm = format(m3);
  var fx = format(x2);
  var product = [];
  for (var i3 = 0; i3 < 4; i3++) {
    var row = [fm[i3], fm[i3 + 4], fm[i3 + 8], fm[i3 + 12]];
    for (var j2 = 0; j2 < 4; j2++) {
      var k2 = j2 * 4;
      var col = [fx[k2], fx[k2 + 1], fx[k2 + 2], fx[k2 + 3]];
      var result = row[0] * col[0] + row[1] * col[1] + row[2] * col[2] + row[3] * col[3];
      product[i3 + k2] = result;
    }
  }
  return product;
}
function parse(source) {
  if (typeof source === "string") {
    var match = source.match(/matrix(3d)?\(([^)]+)\)/);
    if (match) {
      var raw = match[2].split(", ").map(parseFloat);
      return format(raw);
    }
  }
  return identity();
}
function scaleX(scalar) {
  var matrix = identity();
  matrix[0] = scalar;
  return matrix;
}
function scaleY(scalar) {
  var matrix = identity();
  matrix[5] = scalar;
  return matrix;
}
function translateX(distance) {
  var matrix = identity();
  matrix[12] = distance;
  return matrix;
}
function translateY(distance) {
  var matrix = identity();
  matrix[13] = distance;
  return matrix;
}

// ../node_modules/flip-toolkit/lib/index.es.js
var e = function(t2) {
  return "number" == typeof t2;
};
var i = function(t2) {
  return "function" == typeof t2;
};
var n = function(t2) {
  return "[object Object]" === Object.prototype.toString.call(t2);
};
var r = function(t2) {
  return Array.prototype.slice.apply(t2);
};
var s = function(t2) {
  var e3 = t2.reduce(function(t3, e4) {
    return t3[e4] = (t3[e4] || 0) + 1, t3;
  }, {});
  return Object.keys(e3).filter(function(t3) {
    return e3[t3] > 1;
  });
};
function a(t2) {
  return [].slice.call(arguments, 1).forEach(function(e3) {
    if (e3) for (var i3 in e3) Object.prototype.hasOwnProperty.call(e3, i3) && (t2[i3] = e3[i3]);
  }), t2;
}
var o;
var l = function(t2, e3, i3) {
  return t2 + (e3 - t2) * i3;
};
var p = { __proto__: null, isNumber: e, isFunction: i, isObject: n, toArray: r, getDuplicateValsAsStrings: s, assign: a, tweenProp: l };
var c = "data-flip-id";
var u = "data-inverse-flip-id";
var d = "data-portal-key";
var f = "data-exit-container";
var h = { __proto__: null, DATA_FLIP_ID: c, DATA_INVERSE_FLIP_ID: u, DATA_FLIP_COMPONENT_ID: "data-flip-component-id", DATA_FLIP_CONFIG: "data-flip-config", DATA_PORTAL_KEY: d, DATA_EXIT_CONTAINER: f };
var g = { noWobble: { stiffness: 200, damping: 26 }, gentle: { stiffness: 120, damping: 14 }, veryGentle: { stiffness: 130, damping: 17 }, wobbly: { stiffness: 180, damping: 12 }, stiff: { stiffness: 260, damping: 26 } };
var m = function(t2) {
  return n(t2) ? t2 : Object.keys(g).indexOf(t2) > -1 ? g[t2] : {};
};
"undefined" != typeof window && (o = window.requestAnimationFrame);
var v = o = o || function(t2) {
  window.setTimeout(t2, 1e3 / 60);
};
var y = Date.now();
var _ = "object" == typeof performance && "function" == typeof performance.now ? function() {
  return performance.now();
} : function() {
  return Date.now() - y;
};
function S(t2, e3) {
  var i3 = t2.indexOf(e3);
  -1 !== i3 && t2.splice(i3, 1);
}
var E = function() {
  function t2() {
  }
  return t2.prototype.run = function() {
    var t3 = this;
    v(function() {
      t3.springSystem.loop(_());
    });
  }, t2;
}();
var A = function() {
  this.position = 0, this.velocity = 0;
};
var C = 0;
var b = 1e-3;
var I = function() {
  function t2(t3) {
    this._id = "s" + C++, this._springSystem = t3, this.listeners = [], this._startValue = 0, this._currentState = new A(), this._displacementFromRestThreshold = 1e-3, this._endValue = 0, this._overshootClampingEnabled = false, this._previousState = new A(), this._restSpeedThreshold = 1e-3, this._tempState = new A(), this._timeAccumulator = 0, this._wasAtRest = true, this._cachedSpringConfig = {};
  }
  var e3 = t2.prototype;
  return e3.getId = function() {
    return this._id;
  }, e3.destroy = function() {
    this.listeners = [], this._springSystem.deregisterSpring(this);
  }, e3.setSpringConfig = function(t3) {
    return this._springConfig = t3, this;
  }, e3.getCurrentValue = function() {
    return this._currentState.position;
  }, e3.getDisplacementDistanceForState = function(t3) {
    return Math.abs(this._endValue - t3.position);
  }, e3.setEndValue = function(t3) {
    if (t3 === this._endValue) return this;
    if (this.prevEndValue = t3, this._endValue === t3 && this.isAtRest()) return this;
    this._startValue = this.getCurrentValue(), this._endValue = t3, this._springSystem.activateSpring(this.getId());
    for (var e4 = 0, i3 = this.listeners.length; e4 < i3; e4++) {
      var n3 = this.listeners[e4].onSpringEndStateChange;
      n3 && n3(this);
    }
    return this;
  }, e3.setVelocity = function(t3) {
    return t3 === this._currentState.velocity || (this._currentState.velocity = t3, this._springSystem.activateSpring(this.getId())), this;
  }, e3.setCurrentValue = function(t3) {
    this._startValue = t3, this._currentState.position = t3;
    for (var e4 = 0, i3 = this.listeners.length; e4 < i3; e4++) {
      var n3 = this.listeners[e4];
      n3.onSpringUpdate && n3.onSpringUpdate(this);
    }
    return this;
  }, e3.setAtRest = function() {
    return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this;
  }, e3.setOvershootClampingEnabled = function(t3) {
    return this._overshootClampingEnabled = t3, this;
  }, e3.isOvershooting = function() {
    var t3 = this._startValue, e4 = this._endValue;
    return this._springConfig.tension > 0 && (t3 < e4 && this.getCurrentValue() > e4 || t3 > e4 && this.getCurrentValue() < e4);
  }, e3.advance = function(t3, e4) {
    var i3 = this.isAtRest();
    if (!i3 || !this._wasAtRest) {
      var n3 = e4;
      e4 > 0.064 && (n3 = 0.064), this._timeAccumulator += n3;
      for (var r3, s2, a2, o2, l2, p2, c3 = this._springConfig.tension, u3 = this._springConfig.friction, d3 = this._currentState.position, f3 = this._currentState.velocity, h3 = this._tempState.position, g3 = this._tempState.velocity; this._timeAccumulator >= b; ) this._timeAccumulator -= b, this._timeAccumulator < b && (this._previousState.position = d3, this._previousState.velocity = f3), s2 = c3 * (this._endValue - h3) - u3 * f3, o2 = c3 * (this._endValue - (h3 = d3 + (r3 = f3) * b * 0.5)) - u3 * (g3 = f3 + s2 * b * 0.5), p2 = c3 * (this._endValue - (h3 = d3 + (a2 = g3) * b * 0.5)) - u3 * (g3 = f3 + o2 * b * 0.5), h3 = d3 + (l2 = g3) * b, d3 += 1 / 6 * (r3 + 2 * (a2 + l2) + (g3 = f3 + p2 * b)) * b, f3 += 1 / 6 * (s2 + 2 * (o2 + p2) + (c3 * (this._endValue - h3) - u3 * g3)) * b;
      this._tempState.position = h3, this._tempState.velocity = g3, this._currentState.position = d3, this._currentState.velocity = f3, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / b), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), i3 = true);
      var m3 = false;
      this._wasAtRest && (this._wasAtRest = false, m3 = true);
      var v2 = false;
      i3 && (this._wasAtRest = true, v2 = true), this.notifyPositionUpdated(m3, v2);
    }
  }, e3.notifyPositionUpdated = function(t3, e4) {
    var i3 = this;
    this.listeners.filter(Boolean).forEach(function(n3) {
      t3 && n3.onSpringActivate && !i3._onActivateCalled && (n3.onSpringActivate(i3), i3._onActivateCalled = true), n3.onSpringUpdate && n3.onSpringUpdate(i3), e4 && n3.onSpringAtRest && n3.onSpringAtRest(i3);
    });
  }, e3.systemShouldAdvance = function() {
    return !this.isAtRest() || !this.wasAtRest();
  }, e3.wasAtRest = function() {
    return this._wasAtRest;
  }, e3.isAtRest = function() {
    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension);
  }, e3._interpolate = function(t3) {
    this._currentState.position = this._currentState.position * t3 + this._previousState.position * (1 - t3), this._currentState.velocity = this._currentState.velocity * t3 + this._previousState.velocity * (1 - t3);
  }, e3.addListener = function(t3) {
    return this.listeners.push(t3), this;
  }, e3.addOneTimeListener = function(t3) {
    var e4 = this;
    return Object.keys(t3).forEach(function(i3) {
      var n3;
      t3[i3] = (n3 = t3[i3], function() {
        n3.apply(void 0, [].slice.call(arguments)), e4.removeListener(t3);
      });
    }), this.listeners.push(t3), this;
  }, e3.removeListener = function(t3) {
    return S(this.listeners, t3), this;
  }, t2;
}();
var w = function() {
  function t2(t3) {
    this.looper = t3 || new E(), this.looper.springSystem = this, this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = true, this._lastTimeMillis = -1, this._springRegistry = {};
  }
  var e3 = t2.prototype;
  return e3.createSpring = function(t3, e4) {
    return this.createSpringWithConfig({ tension: t3, friction: e4 });
  }, e3.createSpringWithConfig = function(t3) {
    var e4 = new I(this);
    return this.registerSpring(e4), e4.setSpringConfig(t3), e4;
  }, e3.getIsIdle = function() {
    return this._isIdle;
  }, e3.registerSpring = function(t3) {
    this._springRegistry[t3.getId()] = t3;
  }, e3.deregisterSpring = function(t3) {
    S(this._activeSprings, t3), delete this._springRegistry[t3.getId()];
  }, e3.advance = function(t3, e4) {
    for (var i3 = this; this._idleSpringIndices.length > 0; ) this._idleSpringIndices.pop();
    for (this._activeSprings.filter(Boolean).forEach(function(n4) {
      n4.systemShouldAdvance() ? n4.advance(t3 / 1e3, e4 / 1e3) : i3._idleSpringIndices.push(i3._activeSprings.indexOf(n4));
    }); this._idleSpringIndices.length > 0; ) {
      var n3 = this._idleSpringIndices.pop();
      n3 >= 0 && this._activeSprings.splice(n3, 1);
    }
  }, e3.loop = function(t3) {
    var e4;
    -1 === this._lastTimeMillis && (this._lastTimeMillis = t3 - 1);
    var i3 = t3 - this._lastTimeMillis;
    this._lastTimeMillis = t3;
    var n3 = 0, r3 = this.listeners.length;
    for (n3 = 0; n3 < r3; n3++) (e4 = this.listeners[n3]).onBeforeIntegrate && e4.onBeforeIntegrate(this);
    for (this.advance(t3, i3), 0 === this._activeSprings.length && (this._isIdle = true, this._lastTimeMillis = -1), n3 = 0; n3 < r3; n3++) (e4 = this.listeners[n3]).onAfterIntegrate && e4.onAfterIntegrate(this);
    this._isIdle || this.looper.run();
  }, e3.activateSpring = function(t3) {
    var e4 = this._springRegistry[t3];
    -1 === this._activeSprings.indexOf(e4) && this._activeSprings.push(e4), this.getIsIdle() && (this._isIdle = false, this.looper.run());
  }, t2;
}();
var O = new w();
var x = function(t2) {
  var e3 = t2.springConfig, i3 = e3.overshootClamping, n3 = t2.getOnUpdateFunc, r3 = t2.onAnimationEnd, s2 = t2.onSpringActivate, a2 = O.createSpring(e3.stiffness, e3.damping);
  a2.setOvershootClampingEnabled(!!i3);
  var o2 = { onSpringActivate: s2, onSpringAtRest: function() {
    a2.destroy(), r3();
  }, onSpringUpdate: n3({ spring: a2, onAnimationEnd: r3 }) };
  return a2.addListener(o2), a2;
};
var U = function(t2) {
  var e3 = x(t2);
  return e3.setEndValue(1), e3;
};
var V = function(t2, e3) {
  if (void 0 === e3 && (e3 = {}), t2 && t2.length) {
    e3.reverse && t2.reverse();
    var i3, n3 = "number" != typeof (i3 = e3.speed) ? 1.1 : 1 + Math.min(Math.max(5 * i3, 0), 5), r3 = 1 / Math.max(Math.min(t2.length, 100), 10), s2 = t2.map(function(t3, e4) {
      var i4 = t3.getOnUpdateFunc;
      return t3.getOnUpdateFunc = function(t4) {
        var a2 = i4(t4);
        return function(t5) {
          var i5 = t5.getCurrentValue();
          (i5 = i5 < 0.01 ? 0 : i5 > 0.99 ? 1 : i5) >= r3 && s2[e4 + 1] && s2[e4 + 1](Math.max(Math.min(i5 * n3, 1), 0)), a2(t5);
        };
      }, t3;
    }).map(function(t3) {
      var e4 = x(t3);
      if (e4) return e4.setEndValue.bind(e4);
    }).filter(Boolean);
    s2[0] && s2[0](1);
  }
};
var F = function(t2) {
  return [0, 1, 4, 5, 12, 13].map(function(e3) {
    return t2[e3];
  });
};
var P = function(t2) {
  return t2.top < window.innerHeight && t2.bottom > 0 && t2.left < window.innerWidth && t2.right > 0;
};
function D(t2) {
  return JSON.parse(t2.dataset.flipConfig || "{}");
}
var R = function(t2, e3) {
  var i3;
  return a(t2, ((i3 = {})[e3[0]] = e3[1], i3));
};
var T = function(t2, e3) {
  return r(e3 ? document.querySelectorAll("[" + d + '="' + e3 + '"]') : t2.querySelectorAll("[" + c + "]"));
};
var M = function(t2) {
  return t2.map(function(t3) {
    return [t3, t3.getBoundingClientRect()];
  });
};
var k = function(n3) {
  var o2 = n3.cachedOrderedFlipIds, p2 = void 0 === o2 ? [] : o2, f3 = n3.inProgressAnimations, h3 = void 0 === f3 ? {} : f3, v2 = n3.flippedElementPositionsBeforeUpdate, y3 = void 0 === v2 ? {} : v2, _2 = n3.flipCallbacks, S2 = void 0 === _2 ? {} : _2, E2 = n3.containerEl, A2 = n3.applyTransformOrigin, C2 = n3.spring, b2 = n3.debug, I2 = n3.portalKey, w2 = n3.staggerConfig, O2 = void 0 === w2 ? {} : w2, x2 = n3.decisionData, k2 = void 0 === x2 ? {} : x2, j2 = n3.handleEnterUpdateDelete, B2 = n3.onComplete, N2 = n3.onStart;
  if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
    var L2, q = M(T((L2 = { element: E2, portalKey: I2 }).element, L2.portalKey)).map(function(t2) {
      var e3 = t2[0], i3 = t2[1], n4 = window.getComputedStyle(e3);
      return [e3.dataset.flipId, { element: e3, rect: i3, opacity: parseFloat(n4.opacity), transform: n4.transform }];
    }).reduce(R, {}), X = function(t2) {
      var e3 = t2.containerEl, i3 = t2.portalKey;
      return i3 ? /* @__PURE__ */ function(t3) {
        return function(e4) {
          return r(document.querySelectorAll("[" + d + '="' + t3 + '"]' + e4));
        };
      }(i3) : e3 ? function(t3) {
        var e4 = Math.random().toFixed(5);
        return t3.dataset.flipperId = e4, function(i4) {
          return r(t3.querySelectorAll('[data-flipper-id="' + e4 + '"] ' + i4));
        };
      }(e3) : function() {
        return [];
      };
    }({ containerEl: E2, portalKey: I2 }), Y = /* @__PURE__ */ function(t2) {
      return function(e3) {
        return t2("[" + c + '="' + e3 + '"]')[0];
      };
    }(X), W = function(t2) {
      return y3[t2] && q[t2];
    }, K = Object.keys(y3).concat(Object.keys(q)).filter(function(t2) {
      return !W(t2);
    }), H = { flipCallbacks: S2, getElement: Y, flippedElementPositionsBeforeUpdate: y3, flippedElementPositionsAfterUpdate: q, inProgressAnimations: h3, decisionData: k2 }, J = function(t2) {
      var e3, i3 = t2.unflippedIds, n4 = t2.flipCallbacks, r3 = t2.getElement, s2 = t2.flippedElementPositionsBeforeUpdate, a2 = t2.flippedElementPositionsAfterUpdate, o3 = t2.inProgressAnimations, l2 = t2.decisionData, p3 = i3.filter(function(t3) {
        return a2[t3];
      }).filter(function(t3) {
        return n4[t3] && n4[t3].onAppear;
      }), c3 = i3.filter(function(t3) {
        return s2[t3] && n4[t3] && n4[t3].onExit;
      }), u3 = new Promise(function(t3) {
        e3 = t3;
      }), d3 = [], f4 = 0, h4 = c3.map(function(t3, i4) {
        var r4 = s2[t3].domDataForExitAnimations, a3 = r4.element, p4 = r4.parent, c4 = r4.childPosition, u4 = c4.top, h5 = c4.left, g3 = c4.width, m3 = c4.height;
        "static" === getComputedStyle(p4).position && (p4.style.position = "relative"), a3.style.transform = "matrix(1, 0, 0, 1, 0, 0)", a3.style.position = "absolute", a3.style.top = u4 + "px", a3.style.left = h5 + "px", a3.style.height = m3 + "px", a3.style.width = g3 + "px";
        var v3 = d3.filter(function(t4) {
          return t4[0] === p4;
        })[0];
        v3 || (v3 = [p4, document.createDocumentFragment()], d3.push(v3)), v3[1].appendChild(a3), f4 += 1;
        var y4 = function() {
          try {
            p4.removeChild(a3);
          } catch (t4) {
          } finally {
            0 == (f4 -= 1) && e3();
          }
        };
        return o3[t3] = { stop: y4 }, function() {
          return n4[t3].onExit(a3, i4, y4, l2);
        };
      });
      return d3.forEach(function(t3) {
        t3[0].appendChild(t3[1]);
      }), h4.length || e3(), { hideEnteringElements: function() {
        p3.forEach(function(t3) {
          var e4 = r3(t3);
          e4 && (e4.style.opacity = "0");
        });
      }, animateEnteringElements: function() {
        p3.forEach(function(t3, e4) {
          var i4 = r3(t3);
          i4 && n4[t3].onAppear(i4, e4, l2);
        });
      }, animateExitingElements: function() {
        return h4.forEach(function(t3) {
          return t3();
        }), u3;
      } };
    }(a({}, H, { unflippedIds: K })), z = J.hideEnteringElements, G = J.animateEnteringElements, Q = J.animateExitingElements, Z = a({}, H, { containerEl: E2, flippedIds: p2.filter(W), applyTransformOrigin: A2, spring: C2, debug: b2, staggerConfig: O2, scopedSelector: X, onComplete: B2 });
    N2 && N2(E2, k2);
    var $ = function(n4) {
      var o3, p3 = n4.flippedIds, c3 = n4.flipCallbacks, d3 = n4.inProgressAnimations, f4 = n4.flippedElementPositionsBeforeUpdate, h4 = n4.flippedElementPositionsAfterUpdate, v3 = n4.applyTransformOrigin, y4 = n4.spring, _3 = n4.getElement, S3 = n4.debug, E3 = n4.staggerConfig, A3 = void 0 === E3 ? {} : E3, C3 = n4.decisionData, b3 = void 0 === C3 ? {} : C3, I3 = n4.onComplete, w3 = n4.containerEl, O3 = new Promise(function(t2) {
        o3 = t2;
      });
      if (I3 && O3.then(function() {
        return I3(w3, b3);
      }), !p3.length) return function() {
        return o3([]), O3;
      };
      var x3 = [], R2 = _3(p3[0]), T2 = R2 ? R2.ownerDocument.querySelector("body") : document.querySelector("body");
      s(p3);
      var M2 = p3.map(function(n5) {
        var s2 = f4[n5].rect, p4 = h4[n5].rect, _4 = f4[n5].opacity, S4 = h4[n5].opacity, E4 = p4.width < 1 || p4.height < 1, A4 = h4[n5].element;
        if (!P(s2) && !P(p4)) return false;
        if (!A4) return false;
        var C4, I4, w4, O4 = D(A4), U2 = (w4 = (I4 = void 0 === (C4 = { flipperSpring: y4, flippedSpring: O4.spring }) ? {} : C4).flippedSpring, a({}, g.noWobble, m(I4.flipperSpring), m(w4))), V2 = true === O4.stagger ? "default" : O4.stagger, R3 = { element: A4, id: n5, stagger: V2, springConfig: U2 };
        if (c3[n5] && c3[n5].shouldFlip && !c3[n5].shouldFlip(b3.previous, b3.current)) return false;
        var k4 = Math.abs(s2.left - p4.left) + Math.abs(s2.top - p4.top), j4 = Math.abs(s2.width - p4.width) + Math.abs(s2.height - p4.height), B4 = Math.abs(S4 - _4);
        if (0 === s2.height && 0 === p4.height || 0 === s2.width && 0 === p4.width || k4 < 0.5 && j4 < 0.5 && B4 < 0.01) return false;
        var N4 = parse(h4[n5].transform), L4 = { matrix: N4 }, q3 = { matrix: [] }, X2 = [N4];
        O4.translate && (X2.push(translateX(s2.left - p4.left)), X2.push(translateY(s2.top - p4.top))), O4.scale && (X2.push(scaleX(Math.max(s2.width, 1) / Math.max(p4.width, 1))), X2.push(scaleY(Math.max(s2.height, 1) / Math.max(p4.height, 1)))), O4.opacity && (q3.opacity = _4, L4.opacity = S4);
        var Y2 = [];
        if (!c3[n5] || !c3[n5].shouldInvert || c3[n5].shouldInvert(b3.previous, b3.current)) {
          var W2 = function(t2, e3) {
            return r(t2.querySelectorAll("[" + u + '="' + e3 + '"]'));
          }(A4, n5);
          Y2 = W2.map(function(t2) {
            return [t2, D(t2)];
          });
        }
        q3.matrix = F(X2.reduce(multiply)), L4.matrix = F(L4.matrix);
        var K2, H2 = function(t2) {
          var i3 = t2.element, n6 = t2.invertedChildren, r3 = t2.body;
          return function(t3) {
            var s3 = t3.matrix, a2 = t3.opacity, o4 = t3.forceMinVals;
            if (e(a2) && (i3.style.opacity = a2 + ""), o4 && (i3.style.minHeight = "1px", i3.style.minWidth = "1px"), s3) {
              var l2 = function(t4) {
                return "matrix(" + t4.join(", ") + ")";
              }(s3);
              i3.style.transform = l2, n6 && function(t4) {
                var e3 = t4.matrix, i4 = t4.body;
                t4.invertedChildren.forEach(function(t5) {
                  var n7 = t5[0], r4 = t5[1];
                  if (i4.contains(n7)) {
                    var s4 = e3[0], a3 = e3[3], o5 = e3[5], l3 = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 }, p5 = "";
                    r4.translate && (l3.translateX = -e3[4] / s4, l3.translateY = -o5 / a3, p5 += "translate(" + l3.translateX + "px, " + l3.translateY + "px)"), r4.scale && (l3.scaleX = 1 / s4, l3.scaleY = 1 / a3, p5 += " scale(" + l3.scaleX + ", " + l3.scaleY + ")"), n7.style.transform = p5;
                  }
                });
              }({ invertedChildren: n6, matrix: s3, body: r3 });
            }
          };
        }({ element: A4, invertedChildren: Y2, body: T2 });
        if (c3[n5] && c3[n5].onComplete) {
          var J2 = c3[n5].onComplete;
          K2 = function() {
            return J2(A4, b3);
          };
        }
        var z2 = e(q3.opacity) && e(L4.opacity) && q3.opacity !== L4.opacity, G2 = false;
        return a({}, R3, { stagger: V2, springConfig: U2, getOnUpdateFunc: function(t2) {
          var e3 = t2.spring, i3 = t2.onAnimationEnd;
          return d3[n5] = { destroy: e3.destroy.bind(e3), onAnimationEnd: i3 }, function(t3) {
            c3[n5] && c3[n5].onSpringUpdate && c3[n5].onSpringUpdate(t3.getCurrentValue()), G2 || (G2 = true, c3[n5] && c3[n5].onStart && c3[n5].onStart(A4, b3));
            var e4 = t3.getCurrentValue();
            if (T2.contains(A4)) {
              var i4 = { matrix: [] };
              i4.matrix = q3.matrix.map(function(t4, i5) {
                return l(t4, L4.matrix[i5], e4);
              }), z2 && (i4.opacity = l(q3.opacity, L4.opacity, e4)), H2(i4);
            } else t3.destroy();
          };
        }, initializeFlip: function() {
          H2({ matrix: q3.matrix, opacity: z2 ? q3.opacity : void 0, forceMinVals: E4 }), c3[n5] && c3[n5].onStartImmediate && c3[n5].onStartImmediate(A4, b3), O4.transformOrigin ? A4.style.transformOrigin = O4.transformOrigin : v3 && (A4.style.transformOrigin = "0 0"), Y2.forEach(function(t2) {
            var e3 = t2[0], i3 = t2[1];
            i3.transformOrigin ? e3.style.transformOrigin = i3.transformOrigin : v3 && (e3.style.transformOrigin = "0 0");
          });
        }, onAnimationEnd: function(t2) {
          delete d3[n5], i(K2) && K2(), A4.style.transform = "", Y2.forEach(function(t3) {
            t3[0].style.transform = "";
          }), E4 && A4 && (A4.style.minHeight = "", A4.style.minWidth = ""), t2 || (x3.push(n5), x3.length >= M2.length && o3(x3));
        }, delayUntil: O4.delayUntil });
      }).filter(Boolean);
      if (M2.forEach(function(t2) {
        return (0, t2.initializeFlip)();
      }), S3) return function() {
      };
      var k3 = M2.filter(function(t2) {
        return t2.delayUntil && (e3 = t2.delayUntil, M2.filter(function(t3) {
          return t3.id === e3;
        }).length);
        var e3;
      }), j3 = {}, B3 = {}, N3 = {};
      k3.forEach(function(t2) {
        t2.stagger ? (N3[t2.stagger] = true, B3[t2.delayUntil] ? B3[t2.delayUntil].push(t2.stagger) : B3[t2.delayUntil] = [t2.stagger]) : j3[t2.delayUntil] ? j3[t2.delayUntil].push(t2) : j3[t2.delayUntil] = [t2];
      });
      var L3 = M2.filter(function(t2) {
        return t2.stagger;
      }).reduce(function(t2, e3) {
        return t2[e3.stagger] ? t2[e3.stagger].push(e3) : t2[e3.stagger] = [e3], t2;
      }, {}), q2 = M2.filter(function(t2) {
        return -1 === k3.indexOf(t2);
      });
      return q2.forEach(function(t2) {
        t2.onSpringActivate = function() {
          j3[t2.id] && j3[t2.id].forEach(U), B3[t2.id] && Object.keys(B3[t2.id].reduce(function(t3, e3) {
            var i3;
            return a(t3, ((i3 = {})[e3] = true, i3));
          }, {})).forEach(function(t3) {
            V(L3[t3], A3[t3]);
          });
        };
      }), function() {
        return M2.length || o3([]), q2.filter(function(t2) {
          return !t2.stagger;
        }).forEach(U), Object.keys(L3).forEach(function(t2) {
          N3[t2] || V(L3[t2], A3[t2]);
        }), O3;
      };
    }(Z);
    j2 ? j2({ hideEnteringElements: z, animateEnteringElements: G, animateExitingElements: Q, animateFlippedElements: $ }) : (z(), Q().then(G), $());
  }
};
var j = function(t2) {
  var e3 = t2.element, i3 = t2.flipCallbacks, n3 = void 0 === i3 ? {} : i3, s2 = t2.inProgressAnimations, o2 = void 0 === s2 ? {} : s2, l2 = T(e3, t2.portalKey), p2 = r(e3.querySelectorAll("[" + u + "]")), c3 = {}, d3 = [], h3 = {};
  l2.filter(function(t3) {
    return n3 && n3[t3.dataset.flipId] && n3[t3.dataset.flipId].onExit;
  }).forEach(function(t3) {
    var e4 = t3.parentNode;
    if (t3.closest) {
      var i4 = t3.closest("[" + f + "]");
      i4 && (e4 = i4);
    }
    var n4 = d3.findIndex(function(t4) {
      return t4[0] === e4;
    });
    -1 === n4 && (d3.push([e4, e4.getBoundingClientRect()]), n4 = d3.length - 1), c3[t3.dataset.flipId] = d3[n4][1], h3[t3.dataset.flipId] = e4;
  });
  var g3 = M(l2), m3 = g3.map(function(t3) {
    var e4 = t3[0], i4 = t3[1], r3 = {};
    if (n3 && n3[e4.dataset.flipId] && n3[e4.dataset.flipId].onExit) {
      var s3 = c3[e4.dataset.flipId];
      a(r3, { element: e4, parent: h3[e4.dataset.flipId], childPosition: { top: i4.top - s3.top, left: i4.left - s3.left, width: i4.width, height: i4.height } });
    }
    return [e4.dataset.flipId, { rect: i4, opacity: parseFloat(window.getComputedStyle(e4).opacity || "1"), domDataForExitAnimations: r3 }];
  }).reduce(R, {});
  return function(t3, e4) {
    Object.keys(t3).forEach(function(e5) {
      t3[e5].destroy && t3[e5].destroy(), t3[e5].onAnimationEnd && t3[e5].onAnimationEnd(true), delete t3[e5];
    }), e4.forEach(function(t4) {
      t4.style.transform = "", t4.style.opacity = "";
    });
  }(o2, l2.concat(p2)), { flippedElementPositions: m3, cachedOrderedFlipIds: g3.map(function(t3) {
    return t3[0].dataset.flipId;
  }) };
};
var B = function() {
  function t2(t3) {
    this.element = void 0, this.staggerConfig = void 0, this.applyTransformOrigin = true, this.handleEnterUpdateDelete = void 0, this.debug = void 0, this.spring = void 0, this.inProgressAnimations = void 0, this.flipCallbacks = void 0, this.snapshot = void 0, this.onComplete = void 0, this.onStart = void 0, a(this, t3), this.inProgressAnimations = {}, this.flipCallbacks = {}, this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this), this.update = this.update.bind(this), this.addFlipped = this.addFlipped.bind(this), this.addInverted = this.addInverted.bind(this);
  }
  var e3 = t2.prototype;
  return e3.recordBeforeUpdate = function() {
    this.snapshot = j({ element: this.element, flipCallbacks: this.flipCallbacks, inProgressAnimations: this.inProgressAnimations });
  }, e3.update = function(t3, e4) {
    this.snapshot && (k({ flippedElementPositionsBeforeUpdate: this.snapshot.flippedElementPositions, cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds, containerEl: this.element, inProgressAnimations: this.inProgressAnimations, flipCallbacks: this.flipCallbacks, applyTransformOrigin: this.applyTransformOrigin, spring: this.spring, debug: this.debug, staggerConfig: this.staggerConfig, handleEnterUpdateDelete: this.handleEnterUpdateDelete, decisionData: { previous: t3, current: e4 }, onComplete: this.onComplete, onStart: this.onStart }), delete this.snapshot);
  }, e3.addFlipped = function(t3) {
    var e4 = t3.element, i3 = t3.flipId, n3 = t3.opacity, r3 = t3.translate, s2 = t3.scale, o2 = t3.transformOrigin, l2 = t3.spring, p2 = t3.stagger, c3 = t3.delayUntil, u3 = t3.onAppear, d3 = t3.onStart, f3 = t3.onSpringUpdate, h3 = t3.onComplete, g3 = t3.onExit, m3 = t3.shouldFlip, v2 = t3.shouldInvert;
    if (!e4) throw new Error("no element provided");
    if (!i3) throw new Error("No flipId provided");
    var y3 = { scale: s2, translate: r3, opacity: n3, transformOrigin: o2, spring: l2, stagger: p2, delayUntil: c3 };
    y3.scale || y3.translate || y3.opacity || a(y3, { translate: true, scale: true, opacity: true }), i3 && (e4.dataset.flipId = String(i3)), e4.dataset.flipConfig = JSON.stringify(y3), this.flipCallbacks[i3] = { shouldFlip: m3, shouldInvert: v2, onAppear: u3, onStart: d3, onSpringUpdate: f3, onComplete: h3, onExit: g3 };
  }, e3.addInverted = function(t3) {
    var e4 = t3.element, i3 = t3.parent, n3 = t3.opacity, r3 = t3.translate, s2 = t3.scale, o2 = t3.transformOrigin;
    if (!e4) throw new Error("no element provided");
    if (!i3) throw new Error("parent must be provided");
    var l2 = i3.dataset.flipId, p2 = { scale: s2, translate: r3, opacity: n3, transformOrigin: o2 };
    p2.scale || p2.translate || p2.opacity || a(p2, { translate: true, scale: true, opacity: true }), e4.dataset.inverseFlipId = l2, e4.dataset.flipConfig = JSON.stringify(p2);
  }, t2;
}();
var N = new w();
var L = function(t2) {
  var e3 = t2.values, i3 = t2.onUpdate, n3 = t2.delay, r3 = void 0 === n3 ? 0 : n3, s2 = t2.onComplete, o2 = a({}, g.noWobble, m(t2.config)), p2 = o2.overshootClamping, c3 = N.createSpring(o2.stiffness, o2.damping);
  return c3.setOvershootClampingEnabled(!!p2), c3.addListener({ onSpringAtRest: function(t3) {
    s2 && s2(), t3.destroy();
  }, onSpringUpdate: function(t3) {
    var n4 = t3.getCurrentValue();
    if (!e3) return i3(n4);
    var r4 = Object.keys(e3).map(function(t4) {
      return [t4, l(e3[t4][0], e3[t4][1], n4)];
    }).reduce(function(t4, e4) {
      var i4;
      return Object.assign(t4, ((i4 = {})[e4[0]] = e4[1], i4));
    }, {});
    i3(r4);
  } }), r3 ? setTimeout(function() {
    c3.setEndValue(1);
  }, r3) : c3.setEndValue(1), c3;
};

// ../node_modules/react-flip-toolkit/lib/index.es.js
function c2(e3, t2) {
  return (c2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e4, t3) {
    return e4.__proto__ = t3, e4;
  })(e3, t2);
}
function d2(e3, t2) {
  if (null == e3) return {};
  var r3, n3, i3 = {}, o2 = Object.keys(e3);
  for (n3 = 0; n3 < o2.length; n3++) t2.indexOf(r3 = o2[n3]) >= 0 || (i3[r3] = e3[r3]);
  return i3;
}
var f2 = (0, import_react.createContext)({});
var u2 = (0, import_react.createContext)("portal");
var h2 = function(t2) {
  var r3, n3;
  function i3() {
    var e3;
    return (e3 = t2.apply(this, arguments) || this).inProgressAnimations = {}, e3.flipCallbacks = {}, e3.el = void 0, e3;
  }
  n3 = t2, (r3 = i3).prototype = Object.create(n3.prototype), r3.prototype.constructor = r3, c2(r3, n3);
  var l2 = i3.prototype;
  return l2.getSnapshotBeforeUpdate = function(e3) {
    return e3.flipKey !== this.props.flipKey && this.el ? j({ element: this.el, flipCallbacks: this.flipCallbacks, inProgressAnimations: this.inProgressAnimations, portalKey: this.props.portalKey }) : null;
  }, l2.componentDidUpdate = function(e3, t3, r4) {
    this.props.flipKey !== e3.flipKey && this.el && k({ flippedElementPositionsBeforeUpdate: r4.flippedElementPositions, cachedOrderedFlipIds: r4.cachedOrderedFlipIds, containerEl: this.el, inProgressAnimations: this.inProgressAnimations, flipCallbacks: this.flipCallbacks, applyTransformOrigin: this.props.applyTransformOrigin, spring: this.props.spring, debug: this.props.debug, portalKey: this.props.portalKey, staggerConfig: this.props.staggerConfig, handleEnterUpdateDelete: this.props.handleEnterUpdateDelete, decisionData: { previous: e3.decisionData, current: this.props.decisionData }, onComplete: this.props.onComplete, onStart: this.props.onStart });
  }, l2.render = function() {
    var t3 = this, r4 = this.props, n4 = r4.portalKey, i4 = import_react.default.createElement(f2.Provider, { value: this.flipCallbacks }, import_react.default.createElement(r4.element, { className: r4.className, ref: function(e3) {
      return t3.el = e3;
    } }, this.props.children));
    return n4 && (i4 = import_react.default.createElement(u2.Provider, { value: n4 }, i4)), i4;
  }, i3;
}(import_react.Component);
h2.defaultProps = { applyTransformOrigin: true, element: "div" };
var m2 = function(e3) {
  var t2, r3 = e3.children, o2 = e3.flipId, p2 = e3.inverseFlipId, a2 = e3.portalKey, c3 = d2(e3, ["children", "flipId", "inverseFlipId", "portalKey"]), f3 = r3, u3 = /* @__PURE__ */ function(e4) {
    return "function" == typeof e4;
  }(f3);
  if (!u3) try {
    f3 = import_react.Children.only(r3);
  } catch (e4) {
    throw new Error("Each Flipped component must wrap a single child");
  }
  c3.scale || c3.translate || c3.opacity || p.assign(c3, { translate: true, scale: true, opacity: true });
  var h3 = ((t2 = {})[h.DATA_FLIP_CONFIG] = JSON.stringify(c3), t2);
  return void 0 !== o2 ? h3[h.DATA_FLIP_ID] = String(o2) : p2 && (h3[h.DATA_INVERSE_FLIP_ID] = String(p2)), void 0 !== a2 && (h3[h.DATA_PORTAL_KEY] = a2), u3 ? f3(h3) : (0, import_react.cloneElement)(f3, h3);
};
var y2 = function(t2) {
  var r3 = t2.children, n3 = t2.flipId, i3 = t2.shouldFlip, o2 = t2.shouldInvert, p2 = t2.onAppear, s2 = t2.onStart, a2 = t2.onStartImmediate, c3 = t2.onComplete, h3 = t2.onExit, y3 = t2.onSpringUpdate, g3 = d2(t2, ["children", "flipId", "shouldFlip", "shouldInvert", "onAppear", "onStart", "onStartImmediate", "onComplete", "onExit", "onSpringUpdate"]);
  return r3 ? g3.inverseFlipId ? import_react.default.createElement(m2, Object.assign({}, g3), r3) : import_react.default.createElement(u2.Consumer, null, function(t3) {
    return import_react.default.createElement(f2.Consumer, null, function(d3) {
      return p.isObject(d3) && n3 && (d3[n3] = { shouldFlip: i3, shouldInvert: o2, onAppear: p2, onStart: s2, onStartImmediate: a2, onComplete: c3, onExit: h3, onSpringUpdate: y3 }), import_react.default.createElement(m2, Object.assign({ flipId: n3 }, g3, { portalKey: t3 }), r3);
    });
  }) : null;
};
y2.displayName = "Flipped";
var g2 = function(e3) {
  var t2;
  return (0, import_react.cloneElement)(e3.children, ((t2 = {})[h.DATA_EXIT_CONTAINER] = true, t2));
};
export {
  g2 as ExitContainer,
  y2 as Flipped,
  h2 as Flipper,
  L as spring
};
/*! Bundled license information:

rematrix/dist/rematrix.es.js:
  (*! @license Rematrix v0.2.2
  
  	Copyright 2018 Fisssion LLC.
  
  	Permission is hereby granted, free of charge, to any person obtaining a copy
  	of this software and associated documentation files (the "Software"), to deal
  	in the Software without restriction, including without limitation the rights
  	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  	copies of the Software, and to permit persons to whom the Software is
  	furnished to do so, subject to the following conditions:
  
  	The above copyright notice and this permission notice shall be included in
  	all copies or substantial portions of the Software.
  
  	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  	THE SOFTWARE.
  *)
*/
//# sourceMappingURL=react-flip-toolkit.js.map
